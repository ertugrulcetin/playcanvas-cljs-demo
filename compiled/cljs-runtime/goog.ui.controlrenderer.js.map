{
"version":3,
"file":"goog.ui.controlrenderer.js",
"lineCount":321,
"mappings":"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",
"sources":["goog/ui/controlrenderer.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Base class for control renderers.\n * TODO(attila):  If the renderer framework works well, pull it into Component.\n */\n\ngoog.provide('goog.ui.ControlRenderer');\n\ngoog.forwardDeclare('goog.ui.Control');\ngoog.require('goog.a11y.aria');\ngoog.require('goog.a11y.aria.Role');\ngoog.require('goog.a11y.aria.State');\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.dom');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.classlist');\ngoog.require('goog.object');\ngoog.require('goog.string');\ngoog.require('goog.style');\ngoog.require('goog.ui.Component');\ngoog.require('goog.ui.ControlContent');\ngoog.require('goog.userAgent');  // circular\n\n\n\n/**\n * Default renderer for {@link goog.ui.Control}s.  Can be used as-is, but\n * subclasses of Control will probably want to use renderers specifically\n * tailored for them by extending this class.  Controls that use renderers\n * delegate one or more of the following API methods to the renderer:\n * <ul>\n *    <li>`createDom` - renders the DOM for the component\n *    <li>`canDecorate` - determines whether an element can be decorated\n *        by the component\n *    <li>`decorate` - decorates an existing element with the component\n *    <li>`setState` - updates the appearance of the component based on\n *        its state\n *    <li>`getContent` - returns the component's content\n *    <li>`setContent` - sets the component's content\n * </ul>\n * Controls are stateful; renderers, on the other hand, should be stateless and\n * reusable.\n * @constructor\n */\ngoog.ui.ControlRenderer = function() {};\ngoog.addSingletonGetter(goog.ui.ControlRenderer);\n\n\n/**\n * Constructs a new renderer and sets the CSS class that the renderer will use\n * as the base CSS class to apply to all elements rendered by that renderer.\n * An example to use this function using a color palette:\n *\n * <pre>\n * var myCustomRenderer = goog.ui.ControlRenderer.getCustomRenderer(\n *     goog.ui.PaletteRenderer, 'my-special-palette');\n * var newColorPalette = new goog.ui.ColorPalette(\n *     colors, myCustomRenderer, opt_domHelper);\n * </pre>\n *\n * Your CSS can look like this now:\n * <pre>\n * .my-special-palette { }\n * .my-special-palette-table { }\n * .my-special-palette-cell { }\n * etc.\n * </pre>\n *\n * <em>instead</em> of\n * <pre>\n * .CSS_MY_SPECIAL_PALETTE .goog-palette { }\n * .CSS_MY_SPECIAL_PALETTE .goog-palette-table { }\n * .CSS_MY_SPECIAL_PALETTE .goog-palette-cell { }\n * etc.\n * </pre>\n *\n * You would want to use this functionality when you want an instance of a\n * component to have specific styles different than the other components of the\n * same type in your application.  This avoids using descendant selectors to\n * apply the specific styles to this component.\n *\n * @param {Function} ctor The constructor of the renderer you are trying to\n *     create.\n * @param {string} cssClassName The name of the CSS class for this renderer.\n * @return {goog.ui.ControlRenderer} An instance of the desired renderer with\n *     its getCssClass() method overridden to return the supplied custom CSS\n *     class name.\n */\ngoog.ui.ControlRenderer.getCustomRenderer = function(ctor, cssClassName) {\n  'use strict';\n  var renderer = new ctor();\n\n  /**\n   * Returns the CSS class to be applied to the root element of components\n   * rendered using this renderer.\n   * @return {string} Renderer-specific CSS class.\n   */\n  renderer.getCssClass = function() {\n    'use strict';\n    return cssClassName;\n  };\n\n  return renderer;\n};\n\n\n/**\n * Default CSS class to be applied to the root element of components rendered\n * by this renderer.\n * @type {string}\n */\ngoog.ui.ControlRenderer.CSS_CLASS = goog.getCssName('goog-control');\n\n\n/**\n * Array of arrays of CSS classes that we want composite classes added and\n * removed for in IE6 and lower as a workaround for lack of multi-class CSS\n * selector support.\n *\n * Subclasses that have accompanying CSS requiring this workaround should define\n * their own static IE6_CLASS_COMBINATIONS constant and override\n * getIe6ClassCombinations to return it.\n *\n * For example, if your stylesheet uses the selector .button.collapse-left\n * (and is compiled to .button_collapse-left for the IE6 version of the\n * stylesheet,) you should include ['button', 'collapse-left'] in this array\n * and the class button_collapse-left will be applied to the root element\n * whenever both button and collapse-left are applied individually.\n *\n * Members of each class name combination will be joined with underscores in the\n * order that they're defined in the array. You should alphabetize them (for\n * compatibility with the CSS compiler) unless you are doing something special.\n * @type {Array<Array<string>>}\n */\ngoog.ui.ControlRenderer.IE6_CLASS_COMBINATIONS = [];\n\n\n/**\n * Map of component states to corresponding ARIA attributes.  Since the mapping\n * of component states to ARIA attributes is neither component- nor\n * renderer-specific, this is a static property of the renderer class, and is\n * initialized on first use.\n * @type {Object<goog.ui.Component.State, goog.a11y.aria.State>}\n * @private\n */\ngoog.ui.ControlRenderer.ariaAttributeMap_;\n\n\n/**\n * Map of certain ARIA states to ARIA roles that support them. Used for checked\n * and selected Component states because they are used on Components with ARIA\n * roles that do not support the corresponding ARIA state.\n * @private {!Object<goog.a11y.aria.Role, goog.a11y.aria.State>}\n * @const\n */\ngoog.ui.ControlRenderer.TOGGLE_ARIA_STATE_MAP_ = goog.object.create(\n    goog.a11y.aria.Role.BUTTON, goog.a11y.aria.State.PRESSED,\n    goog.a11y.aria.Role.CHECKBOX, goog.a11y.aria.State.CHECKED,\n    goog.a11y.aria.Role.MENU_ITEM, goog.a11y.aria.State.SELECTED,\n    goog.a11y.aria.Role.MENU_ITEM_CHECKBOX, goog.a11y.aria.State.CHECKED,\n    goog.a11y.aria.Role.MENU_ITEM_RADIO, goog.a11y.aria.State.CHECKED,\n    goog.a11y.aria.Role.RADIO, goog.a11y.aria.State.CHECKED,\n    goog.a11y.aria.Role.TAB, goog.a11y.aria.State.SELECTED,\n    goog.a11y.aria.Role.TREEITEM, goog.a11y.aria.State.SELECTED);\n\n\n/**\n * Returns the ARIA role to be applied to the control.\n * See http://wiki/Main/ARIA for more info.\n * @return {goog.a11y.aria.Role|undefined} ARIA role.\n */\ngoog.ui.ControlRenderer.prototype.getAriaRole = function() {\n  'use strict';\n  // By default, the ARIA role is unspecified.\n  return undefined;\n};\n\n\n/**\n * Returns the control's contents wrapped in a DIV, with the renderer's own\n * CSS class and additional state-specific classes applied to it.\n * @param {goog.ui.Control} control Control to render.\n * @return {Element} Root element for the control.\n */\ngoog.ui.ControlRenderer.prototype.createDom = function(control) {\n  'use strict';\n  // Create and return DIV wrapping contents.\n  var element = control.getDomHelper().createDom(\n      goog.dom.TagName.DIV, this.getClassNames(control).join(' '),\n      control.getContent());\n\n  return element;\n};\n\n\n/**\n * Takes the control's root element and returns the parent element of the\n * control's contents.  Since by default controls are rendered as a single\n * DIV, the default implementation returns the element itself.  Subclasses\n * with more complex DOM structures must override this method as needed.\n * @param {Element} element Root element of the control whose content element\n *     is to be returned.\n * @return {Element} The control's content element.\n */\ngoog.ui.ControlRenderer.prototype.getContentElement = function(element) {\n  'use strict';\n  return element;\n};\n\n\n/**\n * Updates the control's DOM by adding or removing the specified class name\n * to/from its root element. May add additional combined classes as needed in\n * IE6 and lower. Because of this, subclasses should use this method when\n * modifying class names on the control's root element.\n * @param {goog.ui.Control|Element} control Control instance (or root element)\n *     to be updated.\n * @param {string} className CSS class name to add or remove.\n * @param {boolean} enable Whether to add or remove the class name.\n */\ngoog.ui.ControlRenderer.prototype.enableClassName = function(\n    control, className, enable) {\n  'use strict';\n  var element = /** @type {Element} */ (\n      control.getElement ? control.getElement() : control);\n  if (element) {\n    var classNames = [className];\n\n    goog.dom.classlist.enableAll(element, classNames, enable);\n  }\n};\n\n\n/**\n * Updates the control's DOM by adding or removing the specified extra class\n * name to/from its element.\n * @param {goog.ui.Control} control Control to be updated.\n * @param {string} className CSS class name to add or remove.\n * @param {boolean} enable Whether to add or remove the class name.\n */\ngoog.ui.ControlRenderer.prototype.enableExtraClassName = function(\n    control, className, enable) {\n  'use strict';\n  // The base class implementation is trivial; subclasses should override as\n  // needed.\n  this.enableClassName(control, className, enable);\n};\n\n\n/**\n * Returns true if this renderer can decorate the element, false otherwise.\n * The default implementation always returns true.\n * @param {Element} element Element to decorate.\n * @return {boolean} Whether the renderer can decorate the element.\n */\ngoog.ui.ControlRenderer.prototype.canDecorate = function(element) {\n  'use strict';\n  return true;\n};\n\n\n/**\n * Default implementation of `decorate` for {@link goog.ui.Control}s.\n * Initializes the control's ID, content, and state based on the ID of the\n * element, its child nodes, and its CSS classes, respectively.  Returns the\n * element.\n * @param {goog.ui.Control} control Control instance to decorate the element.\n * @param {Element} element Element to decorate.\n * @return {Element} Decorated element.\n */\ngoog.ui.ControlRenderer.prototype.decorate = function(control, element) {\n  'use strict';\n  // Set the control's ID to the decorated element's DOM ID, if any.\n  if (element.id) {\n    control.setId(element.id);\n  }\n\n  // Set the control's content to the decorated element's content.\n  var contentElem = this.getContentElement(element);\n  if (contentElem && contentElem.firstChild) {\n    control.setContentInternal(\n        contentElem.firstChild.nextSibling ?\n            goog.array.clone(contentElem.childNodes) :\n            contentElem.firstChild);\n  } else {\n    control.setContentInternal(null);\n  }\n\n  // Initialize the control's state based on the decorated element's CSS class.\n  // This implementation is optimized to minimize object allocations, string\n  // comparisons, and DOM access.\n  var state = 0x00;\n  var rendererClassName = this.getCssClass();\n  var structuralClassName = this.getStructuralCssClass();\n  var hasRendererClassName = false;\n  var hasStructuralClassName = false;\n  var hasCombinedClassName = false;\n  var classNames = goog.array.toArray(goog.dom.classlist.get(element));\n  classNames.forEach(function(className) {\n    'use strict';\n    if (!hasRendererClassName && className == rendererClassName) {\n      hasRendererClassName = true;\n      if (structuralClassName == rendererClassName) {\n        hasStructuralClassName = true;\n      }\n    } else if (!hasStructuralClassName && className == structuralClassName) {\n      hasStructuralClassName = true;\n    } else {\n      state |= this.getStateFromClass(className);\n    }\n    if (this.getStateFromClass(className) == goog.ui.Component.State.DISABLED) {\n      goog.asserts.assertElement(contentElem);\n      if (goog.dom.isFocusableTabIndex(contentElem)) {\n        goog.dom.setFocusableTabIndex(contentElem, false);\n      }\n    }\n  }, this);\n  control.setStateInternal(state);\n\n  // Make sure the element has the renderer's CSS classes applied, as well as\n  // any extra class names set on the control.\n  if (!hasRendererClassName) {\n    classNames.push(rendererClassName);\n    if (structuralClassName == rendererClassName) {\n      hasStructuralClassName = true;\n    }\n  }\n  if (!hasStructuralClassName) {\n    classNames.push(structuralClassName);\n  }\n  var extraClassNames = control.getExtraClassNames();\n  if (extraClassNames) {\n    classNames.push.apply(classNames, extraClassNames);\n  }\n\n  // Only write to the DOM if new class names had to be added to the element.\n  if (!hasRendererClassName || !hasStructuralClassName || extraClassNames ||\n      hasCombinedClassName) {\n    goog.dom.classlist.set(element, classNames.join(' '));\n  }\n\n  return element;\n};\n\n\n/**\n * Initializes the control's DOM by configuring properties that can only be set\n * after the DOM has entered the document.  This implementation sets up BiDi\n * and keyboard focus.  Called from {@link goog.ui.Control#enterDocument}.\n * @param {goog.ui.Control} control Control whose DOM is to be initialized\n *     as it enters the document.\n */\ngoog.ui.ControlRenderer.prototype.initializeDom = function(control) {\n  'use strict';\n  // Initialize render direction (BiDi).  We optimize the left-to-right render\n  // direction by assuming that elements are left-to-right by default, and only\n  // updating their styling if they are explicitly set to right-to-left.\n  if (control.isRightToLeft()) {\n    this.setRightToLeft(control.getElement(), true);\n  }\n\n  // Initialize keyboard focusability (tab index).  We assume that components\n  // aren't focusable by default (i.e have no tab index), and only touch the\n  // DOM if the component is focusable, enabled, and visible, and therefore\n  // needs a tab index.\n  if (control.isEnabled()) {\n    this.setFocusable(control, control.isVisible());\n  }\n};\n\n\n/**\n * Sets the element's ARIA role.\n * @param {Element} element Element to update.\n * @param {?goog.a11y.aria.Role=} opt_preferredRole The preferred ARIA role.\n */\ngoog.ui.ControlRenderer.prototype.setAriaRole = function(\n    element, opt_preferredRole) {\n  'use strict';\n  var ariaRole = opt_preferredRole || this.getAriaRole();\n  if (ariaRole) {\n    goog.asserts.assert(\n        element, 'The element passed as a first parameter cannot be null.');\n    var currentRole = goog.a11y.aria.getRole(element);\n    if (ariaRole == currentRole) {\n      return;\n    }\n    goog.a11y.aria.setRole(element, ariaRole);\n  }\n};\n\n\n/**\n * Sets the element's ARIA attributes, including distinguishing between\n * universally supported ARIA properties and ARIA states that are only\n * supported by certain ARIA roles. Only attributes which are initialized to be\n * true will be set.\n * @param {!goog.ui.Control} control Control whose ARIA state will be updated.\n * @param {!Element} element Element whose ARIA state is to be updated.\n */\ngoog.ui.ControlRenderer.prototype.setAriaStates = function(control, element) {\n  'use strict';\n  goog.asserts.assert(control);\n  goog.asserts.assert(element);\n\n  var ariaLabel = control.getAriaLabel();\n  if (ariaLabel != null) {\n    this.setAriaLabel(element, ariaLabel);\n  }\n\n  if (!control.isVisible()) {\n    goog.a11y.aria.setState(\n        element, goog.a11y.aria.State.HIDDEN, !control.isVisible());\n  }\n  if (!control.isEnabled()) {\n    this.updateAriaState(\n        element, goog.ui.Component.State.DISABLED, !control.isEnabled());\n  }\n  if (control.isSupportedState(goog.ui.Component.State.SELECTED)) {\n    this.updateAriaState(\n        element, goog.ui.Component.State.SELECTED, control.isSelected());\n  }\n  if (control.isSupportedState(goog.ui.Component.State.CHECKED)) {\n    this.updateAriaState(\n        element, goog.ui.Component.State.CHECKED, control.isChecked());\n  }\n  if (control.isSupportedState(goog.ui.Component.State.OPENED)) {\n    this.updateAriaState(\n        element, goog.ui.Component.State.OPENED, control.isOpen());\n  }\n};\n\n\n/**\n * Sets the element's ARIA label. This should be overriden by subclasses that\n * don't apply the role directly on control.element_.\n * @param {!Element} element Element whose ARIA label is to be updated.\n * @param {string} ariaLabel Label to add to the element.\n */\ngoog.ui.ControlRenderer.prototype.setAriaLabel = function(element, ariaLabel) {\n  'use strict';\n  goog.a11y.aria.setLabel(element, ariaLabel);\n};\n\n\n/**\n * Allows or disallows text selection within the control's DOM.\n * @param {Element} element The control's root element.\n * @param {boolean} allow Whether the element should allow text selection.\n */\ngoog.ui.ControlRenderer.prototype.setAllowTextSelection = function(\n    element, allow) {\n  'use strict';\n  // On all browsers other than IE and Opera, it isn't necessary to recursively\n  // apply unselectable styling to the element's children.\n  goog.style.setUnselectable(element, !allow, !goog.userAgent.IE);\n};\n\n\n/**\n * Applies special styling to/from the control's element if it is rendered\n * right-to-left, and removes it if it is rendered left-to-right.\n * @param {Element} element The control's root element.\n * @param {boolean} rightToLeft Whether the component is rendered\n *     right-to-left.\n */\ngoog.ui.ControlRenderer.prototype.setRightToLeft = function(\n    element, rightToLeft) {\n  'use strict';\n  this.enableClassName(\n      element, goog.getCssName(this.getStructuralCssClass(), 'rtl'),\n      rightToLeft);\n};\n\n\n/**\n * Returns true if the control's key event target supports keyboard focus\n * (based on its `tabIndex` attribute), false otherwise.\n * @param {goog.ui.Control} control Control whose key event target is to be\n *     checked.\n * @return {boolean} Whether the control's key event target is focusable.\n */\ngoog.ui.ControlRenderer.prototype.isFocusable = function(control) {\n  'use strict';\n  var keyTarget;\n  if (control.isSupportedState(goog.ui.Component.State.FOCUSED) &&\n      (keyTarget = control.getKeyEventTarget())) {\n    return goog.dom.isFocusableTabIndex(keyTarget);\n  }\n  return false;\n};\n\n\n/**\n * Updates the control's key event target to make it focusable or non-focusable\n * via its `tabIndex` attribute.  Does nothing if the control doesn't\n * support the `FOCUSED` state, or if it has no key event target.\n * @param {goog.ui.Control} control Control whose key event target is to be\n *     updated.\n * @param {boolean} focusable Whether to enable keyboard focus support on the\n *     control's key event target.\n */\ngoog.ui.ControlRenderer.prototype.setFocusable = function(control, focusable) {\n  'use strict';\n  var keyTarget;\n  if (control.isSupportedState(goog.ui.Component.State.FOCUSED) &&\n      (keyTarget = control.getKeyEventTarget())) {\n    if (!focusable && control.isFocused()) {\n      // Blur before hiding.  Note that IE calls onblur handlers asynchronously.\n      try {\n        keyTarget.blur();\n      } catch (e) {\n        // TODO(user):  Find out why this fails on IE.\n      }\n      // The blur event dispatched by the key event target element when blur()\n      // was called on it should have been handled by the control's handleBlur()\n      // method, so at this point the control should no longer be focused.\n      // However, blur events are unreliable on IE and FF3, so if at this point\n      // the control is still focused, we trigger its handleBlur() method\n      // programmatically.\n      if (control.isFocused()) {\n        control.handleBlur(null);\n      }\n    }\n    // Don't overwrite existing tab index values unless needed.\n    if (goog.dom.isFocusableTabIndex(keyTarget) != focusable) {\n      goog.dom.setFocusableTabIndex(keyTarget, focusable);\n    }\n  }\n};\n\n\n/**\n * Shows or hides the element.\n * @param {Element} element Element to update.\n * @param {boolean} visible Whether to show the element.\n */\ngoog.ui.ControlRenderer.prototype.setVisible = function(element, visible) {\n  'use strict';\n  // The base class implementation is trivial; subclasses should override as\n  // needed.  It should be possible to do animated reveals, for example.\n  goog.style.setElementShown(element, visible);\n  if (element) {\n    goog.a11y.aria.setState(element, goog.a11y.aria.State.HIDDEN, !visible);\n  }\n};\n\n\n/**\n * Updates the appearance of the control in response to a state change.\n * @param {goog.ui.Control} control Control instance to update.\n * @param {goog.ui.Component.State} state State to enable or disable.\n * @param {boolean} enable Whether the control is entering or exiting the state.\n */\ngoog.ui.ControlRenderer.prototype.setState = function(control, state, enable) {\n  'use strict';\n  var element = control.getElement();\n  if (element) {\n    var className = this.getClassForState(state);\n    if (className) {\n      this.enableClassName(control, className, enable);\n    }\n    this.updateAriaState(element, state, enable);\n  }\n};\n\n\n/**\n * Updates the element's ARIA (accessibility) attributes , including\n * distinguishing between universally supported ARIA properties and ARIA states\n * that are only supported by certain ARIA roles.\n * @param {Element} element Element whose ARIA state is to be updated.\n * @param {goog.ui.Component.State} state Component state being enabled or\n *     disabled.\n * @param {boolean} enable Whether the state is being enabled or disabled.\n * @protected\n */\ngoog.ui.ControlRenderer.prototype.updateAriaState = function(\n    element, state, enable) {\n  'use strict';\n  // Ensure the ARIA attribute map exists.\n  if (!goog.ui.ControlRenderer.ariaAttributeMap_) {\n    goog.ui.ControlRenderer.ariaAttributeMap_ = goog.object.create(\n        goog.ui.Component.State.DISABLED, goog.a11y.aria.State.DISABLED,\n        goog.ui.Component.State.SELECTED, goog.a11y.aria.State.SELECTED,\n        goog.ui.Component.State.CHECKED, goog.a11y.aria.State.CHECKED,\n        goog.ui.Component.State.OPENED, goog.a11y.aria.State.EXPANDED);\n  }\n  goog.asserts.assert(\n      element, 'The element passed as a first parameter cannot be null.');\n  var ariaAttr = goog.ui.ControlRenderer.getAriaStateForAriaRole_(\n      element, goog.ui.ControlRenderer.ariaAttributeMap_[state]);\n  if (ariaAttr) {\n    goog.a11y.aria.setState(element, ariaAttr, enable);\n  }\n};\n\n\n/**\n * Returns the appropriate ARIA attribute based on ARIA role if the ARIA\n * attribute is an ARIA state.\n * @param {!Element} element The element from which to get the ARIA role for\n * matching ARIA state.\n * @param {goog.a11y.aria.State} attr The ARIA attribute to check to see if it\n * can be applied to the given ARIA role.\n * @return {goog.a11y.aria.State} An ARIA attribute that can be applied to the\n * given ARIA role.\n * @private\n */\ngoog.ui.ControlRenderer.getAriaStateForAriaRole_ = function(element, attr) {\n  'use strict';\n  var role = goog.a11y.aria.getRole(element);\n  if (!role) {\n    return attr;\n  }\n  role = /** @type {goog.a11y.aria.Role} */ (role);\n  var matchAttr = goog.ui.ControlRenderer.TOGGLE_ARIA_STATE_MAP_[role] || attr;\n  return goog.ui.ControlRenderer.isAriaState_(attr) ? matchAttr : attr;\n};\n\n\n/**\n * Determines if the given ARIA attribute is an ARIA property or ARIA state.\n * @param {goog.a11y.aria.State} attr The ARIA attribute to classify.\n * @return {boolean} If the ARIA attribute is an ARIA state.\n * @private\n */\ngoog.ui.ControlRenderer.isAriaState_ = function(attr) {\n  'use strict';\n  return attr == goog.a11y.aria.State.CHECKED ||\n      attr == goog.a11y.aria.State.SELECTED;\n};\n\n\n/**\n * Takes a control's root element, and sets its content to the given text\n * caption or DOM structure.  The default implementation replaces the children\n * of the given element.  Renderers that create more complex DOM structures\n * must override this method accordingly.\n * @param {Element} element The control's root element.\n * @param {goog.ui.ControlContent} content Text caption or DOM structure to be\n *     set as the control's content. The DOM nodes will not be cloned, they\n *     will only moved under the content element of the control.\n */\ngoog.ui.ControlRenderer.prototype.setContent = function(element, content) {\n  'use strict';\n  var contentElem = this.getContentElement(element);\n  if (contentElem) {\n    goog.dom.removeChildren(contentElem);\n    if (content) {\n      if (typeof content === 'string') {\n        goog.dom.setTextContent(contentElem, content);\n      } else {\n        var childHandler = function(child) {\n          'use strict';\n          if (child) {\n            var doc = goog.dom.getOwnerDocument(contentElem);\n            contentElem.appendChild(\n                typeof child === 'string' ? doc.createTextNode(child) : child);\n          }\n        };\n        if (Array.isArray(content)) {\n          // Array of nodes.\n          content.forEach(childHandler);\n        } else if (goog.isArrayLike(content) && !('nodeType' in content)) {\n          // NodeList. The second condition filters out TextNode which also has\n          // length attribute but is not array like. The nodes have to be cloned\n          // because childHandler removes them from the list during iteration.\n          goog.array.clone(/** @type {!NodeList<?>} */ (content))\n              .forEach(childHandler);\n        } else {\n          // Node or string.\n          childHandler(content);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Returns the element within the component's DOM that should receive keyboard\n * focus (null if none).  The default implementation returns the control's root\n * element.\n * @param {goog.ui.Control} control Control whose key event target is to be\n *     returned.\n * @return {Element} The key event target.\n */\ngoog.ui.ControlRenderer.prototype.getKeyEventTarget = function(control) {\n  'use strict';\n  return control.getElement();\n};\n\n\n// CSS class name management.\n\n\n/**\n * Returns the CSS class name to be applied to the root element of all\n * components rendered or decorated using this renderer.  The class name\n * is expected to uniquely identify the renderer class, i.e. no two\n * renderer classes are expected to share the same CSS class name.\n * @return {string} Renderer-specific CSS class name.\n */\ngoog.ui.ControlRenderer.prototype.getCssClass = function() {\n  'use strict';\n  return goog.ui.ControlRenderer.CSS_CLASS;\n};\n\n\n/**\n * Returns an array of combinations of classes to apply combined class names for\n * in IE6 and below. See {@link IE6_CLASS_COMBINATIONS} for more detail. This\n * method doesn't reference {@link IE6_CLASS_COMBINATIONS} so that it can be\n * compiled out, but subclasses should return their IE6_CLASS_COMBINATIONS\n * static constant instead.\n * @return {!Array<Array<string>>} Array of class name combinations.\n */\ngoog.ui.ControlRenderer.prototype.getIe6ClassCombinations = function() {\n  'use strict';\n  return [];\n};\n\n\n/**\n * Returns the name of a DOM structure-specific CSS class to be applied to the\n * root element of all components rendered or decorated using this renderer.\n * Unlike the class name returned by {@link #getCssClass}, the structural class\n * name may be shared among different renderers that generate similar DOM\n * structures.  The structural class name also serves as the basis of derived\n * class names used to identify and style structural elements of the control's\n * DOM, as well as the basis for state-specific class names.  The default\n * implementation returns the same class name as {@link #getCssClass}, but\n * subclasses are expected to override this method as needed.\n * @return {string} DOM structure-specific CSS class name (same as the renderer-\n *     specific CSS class name by default).\n */\ngoog.ui.ControlRenderer.prototype.getStructuralCssClass = function() {\n  'use strict';\n  return this.getCssClass();\n};\n\n\n/**\n * Returns all CSS class names applicable to the given control, based on its\n * state.  The return value is an array of strings containing\n * <ol>\n *   <li>the renderer-specific CSS class returned by {@link #getCssClass},\n *       followed by\n *   <li>the structural CSS class returned by {@link getStructuralCssClass} (if\n *       different from the renderer-specific CSS class), followed by\n *   <li>any state-specific classes returned by {@link #getClassNamesForState},\n *       followed by\n *   <li>any extra classes returned by the control's `getExtraClassNames`\n *       method and\n *   <li>for IE6 and lower, additional combined classes from\n *       {@link getAppliedCombinedClassNames_}.\n * </ol>\n * Since all controls have at least one renderer-specific CSS class name, this\n * method is guaranteed to return an array of at least one element.\n * @param {goog.ui.Control} control Control whose CSS classes are to be\n *     returned.\n * @return {!Array<string>} Array of CSS class names applicable to the control.\n * @protected\n */\ngoog.ui.ControlRenderer.prototype.getClassNames = function(control) {\n  'use strict';\n  var cssClass = this.getCssClass();\n\n  // Start with the renderer-specific class name.\n  var classNames = [cssClass];\n\n  // Add structural class name, if different.\n  var structuralCssClass = this.getStructuralCssClass();\n  if (structuralCssClass != cssClass) {\n    classNames.push(structuralCssClass);\n  }\n\n  // Add state-specific class names, if any.\n  var classNamesForState = this.getClassNamesForState(control.getState());\n  classNames.push.apply(classNames, classNamesForState);\n\n  // Add extra class names, if any.\n  var extraClassNames = control.getExtraClassNames();\n  if (extraClassNames) {\n    classNames.push.apply(classNames, extraClassNames);\n  }\n\n  return classNames;\n};\n\n\n/**\n * Returns an array of all the combined class names that should be applied based\n * on the given list of classes. Checks the result of\n * {@link getIe6ClassCombinations} for any combinations that have all\n * members contained in classes. If a combination matches, the members are\n * joined with an underscore (in order), and added to the return array.\n *\n * If opt_includedClass is provided, return only the combined classes that have\n * all members contained in classes AND include opt_includedClass as well.\n * opt_includedClass is added to classes as well.\n * @param {IArrayLike<string>} classes Array-like thing of classes to\n *     return matching combined classes for.\n * @param {?string=} opt_includedClass If provided, get only the combined\n *     classes that include this one.\n * @return {!Array<string>} Array of combined class names that should be\n *     applied.\n * @private\n */\ngoog.ui.ControlRenderer.prototype.getAppliedCombinedClassNames_ = function(\n    classes, opt_includedClass) {\n  'use strict';\n  var toAdd = [];\n  if (opt_includedClass) {\n    classes = goog.array.concat(classes, [opt_includedClass]);\n  }\n  this.getIe6ClassCombinations().forEach(function(combo) {\n    'use strict';\n    if (goog.array.every(combo, goog.partial(goog.array.contains, classes)) &&\n        (!opt_includedClass || goog.array.contains(combo, opt_includedClass))) {\n      toAdd.push(combo.join('_'));\n    }\n  });\n  return toAdd;\n};\n\n\n/**\n * Takes a bit mask of {@link goog.ui.Component.State}s, and returns an array\n * of the appropriate class names representing the given state, suitable to be\n * applied to the root element of a component rendered using this renderer, or\n * null if no state-specific classes need to be applied.  This default\n * implementation uses the renderer's {@link getClassForState} method to\n * generate each state-specific class.\n * @param {number} state Bit mask of component states.\n * @return {!Array<string>} Array of CSS class names representing the given\n *     state.\n * @protected\n */\ngoog.ui.ControlRenderer.prototype.getClassNamesForState = function(state) {\n  'use strict';\n  var classNames = [];\n  while (state) {\n    // For each enabled state, push the corresponding CSS class name onto\n    // the classNames array.\n    var mask = state & -state;  // Least significant bit\n    classNames.push(\n        this.getClassForState(\n            /** @type {goog.ui.Component.State} */ (mask)));\n    state &= ~mask;\n  }\n  return classNames;\n};\n\n\n/**\n * Takes a single {@link goog.ui.Component.State}, and returns the\n * corresponding CSS class name (null if none).\n * @param {goog.ui.Component.State} state Component state.\n * @return {string|undefined} CSS class representing the given state (undefined\n *     if none).\n * @protected\n */\ngoog.ui.ControlRenderer.prototype.getClassForState = function(state) {\n  'use strict';\n  if (!this.classByState_) {\n    this.createClassByStateMap_();\n  }\n  return this.classByState_[state];\n};\n\n\n/**\n * Takes a single CSS class name which may represent a component state, and\n * returns the corresponding component state (0x00 if none).\n * @param {string} className CSS class name, possibly representing a component\n *     state.\n * @return {goog.ui.Component.State} state Component state corresponding\n *     to the given CSS class (0x00 if none).\n * @protected\n */\ngoog.ui.ControlRenderer.prototype.getStateFromClass = function(className) {\n  'use strict';\n  if (!this.stateByClass_) {\n    this.createStateByClassMap_();\n  }\n  var state = parseInt(this.stateByClass_[className], 10);\n  return /** @type {goog.ui.Component.State} */ (isNaN(state) ? 0x00 : state);\n};\n\n\n/**\n * Creates the lookup table of states to classes, used during state changes.\n * @private\n */\ngoog.ui.ControlRenderer.prototype.createClassByStateMap_ = function() {\n  'use strict';\n  var baseClass = this.getStructuralCssClass();\n\n  // This ensures space-separated css classnames are not allowed, which some\n  // ControlRenderers had been doing.  See http://b/13694665.\n  var isValidClassName =\n      !goog.string.contains(goog.string.normalizeWhitespace(baseClass), ' ');\n  goog.asserts.assert(\n      isValidClassName,\n      'ControlRenderer has an invalid css class: \\'' + baseClass + '\\'');\n\n  /**\n   * Map of component states to state-specific structural class names,\n   * used when changing the DOM in response to a state change.  Precomputed\n   * and cached on first use to minimize object allocations and string\n   * concatenation.\n   * @type {Object}\n   * @private\n   */\n  this.classByState_ = goog.object.create(\n      goog.ui.Component.State.DISABLED, goog.getCssName(baseClass, 'disabled'),\n      goog.ui.Component.State.HOVER, goog.getCssName(baseClass, 'hover'),\n      goog.ui.Component.State.ACTIVE, goog.getCssName(baseClass, 'active'),\n      goog.ui.Component.State.SELECTED, goog.getCssName(baseClass, 'selected'),\n      goog.ui.Component.State.CHECKED, goog.getCssName(baseClass, 'checked'),\n      goog.ui.Component.State.FOCUSED, goog.getCssName(baseClass, 'focused'),\n      goog.ui.Component.State.OPENED, goog.getCssName(baseClass, 'open'));\n};\n\n\n/**\n * Creates the lookup table of classes to states, used during decoration.\n * @private\n */\ngoog.ui.ControlRenderer.prototype.createStateByClassMap_ = function() {\n  'use strict';\n  // We need the classByState_ map so we can transpose it.\n  if (!this.classByState_) {\n    this.createClassByStateMap_();\n  }\n\n  /**\n   * Map of state-specific structural class names to component states,\n   * used during element decoration.  Precomputed and cached on first use\n   * to minimize object allocations and string concatenation.\n   * @type {Object}\n   * @private\n   */\n  this.stateByClass_ = goog.object.transpose(this.classByState_);\n};\n"],
"names":["goog","provide","forwardDeclare","require","ui","ControlRenderer","goog.ui.ControlRenderer","addSingletonGetter","getCustomRenderer","goog.ui.ControlRenderer.getCustomRenderer","ctor","cssClassName","renderer","getCssClass","renderer.getCssClass","CSS_CLASS","getCssName","IE6_CLASS_COMBINATIONS","ariaAttributeMap_","TOGGLE_ARIA_STATE_MAP_","object","create","a11y","aria","Role","BUTTON","State","PRESSED","CHECKBOX","CHECKED","MENU_ITEM","SELECTED","MENU_ITEM_CHECKBOX","MENU_ITEM_RADIO","RADIO","TAB","TREEITEM","prototype","getAriaRole","goog.ui.ControlRenderer.prototype.getAriaRole","undefined","createDom","goog.ui.ControlRenderer.prototype.createDom","control","element","getDomHelper","dom","TagName","DIV","getClassNames","join","getContent","getContentElement","goog.ui.ControlRenderer.prototype.getContentElement","enableClassName","goog.ui.ControlRenderer.prototype.enableClassName","className","enable","getElement","classNames","classlist","enableAll","enableExtraClassName","goog.ui.ControlRenderer.prototype.enableExtraClassName","canDecorate","goog.ui.ControlRenderer.prototype.canDecorate","decorate","goog.ui.ControlRenderer.prototype.decorate","id","setId","contentElem","firstChild","setContentInternal","nextSibling","array","clone","childNodes","state","rendererClassName","structuralClassName","getStructuralCssClass","hasRendererClassName","hasStructuralClassName","hasCombinedClassName","toArray","get","forEach","getStateFromClass","Component","DISABLED","asserts","assertElement","isFocusableTabIndex","setFocusableTabIndex","setStateInternal","push","extraClassNames","getExtraClassNames","apply","set","initializeDom","goog.ui.ControlRenderer.prototype.initializeDom","isRightToLeft","setRightToLeft","isEnabled","setFocusable","isVisible","setAriaRole","goog.ui.ControlRenderer.prototype.setAriaRole","opt_preferredRole","ariaRole","assert","currentRole","getRole","setRole","setAriaStates","goog.ui.ControlRenderer.prototype.setAriaStates","ariaLabel","getAriaLabel","setAriaLabel","setState","HIDDEN","updateAriaState","isSupportedState","isSelected","isChecked","OPENED","isOpen","goog.ui.ControlRenderer.prototype.setAriaLabel","setLabel","setAllowTextSelection","goog.ui.ControlRenderer.prototype.setAllowTextSelection","allow","style","setUnselectable","userAgent","IE","goog.ui.ControlRenderer.prototype.setRightToLeft","rightToLeft","isFocusable","goog.ui.ControlRenderer.prototype.isFocusable","keyTarget","FOCUSED","getKeyEventTarget","goog.ui.ControlRenderer.prototype.setFocusable","focusable","isFocused","blur","e","handleBlur","setVisible","goog.ui.ControlRenderer.prototype.setVisible","visible","setElementShown","goog.ui.ControlRenderer.prototype.setState","getClassForState","goog.ui.ControlRenderer.prototype.updateAriaState","EXPANDED","ariaAttr","getAriaStateForAriaRole_","goog.ui.ControlRenderer.getAriaStateForAriaRole_","attr","role","matchAttr","isAriaState_","goog.ui.ControlRenderer.isAriaState_","setContent","goog.ui.ControlRenderer.prototype.setContent","content","removeChildren","setTextContent","childHandler","child","doc","getOwnerDocument","appendChild","createTextNode","Array","isArray","isArrayLike","goog.ui.ControlRenderer.prototype.getKeyEventTarget","goog.ui.ControlRenderer.prototype.getCssClass","getIe6ClassCombinations","goog.ui.ControlRenderer.prototype.getIe6ClassCombinations","goog.ui.ControlRenderer.prototype.getStructuralCssClass","goog.ui.ControlRenderer.prototype.getClassNames","cssClass","structuralCssClass","classNamesForState","getClassNamesForState","getState","getAppliedCombinedClassNames_","goog.ui.ControlRenderer.prototype.getAppliedCombinedClassNames_","classes","opt_includedClass","toAdd","concat","combo","every","partial","contains","goog.ui.ControlRenderer.prototype.getClassNamesForState","mask","goog.ui.ControlRenderer.prototype.getClassForState","classByState_","createClassByStateMap_","goog.ui.ControlRenderer.prototype.getStateFromClass","stateByClass_","createStateByClassMap_","parseInt","isNaN","goog.ui.ControlRenderer.prototype.createClassByStateMap_","baseClass","isValidClassName","string","normalizeWhitespace","HOVER","ACTIVE","goog.ui.ControlRenderer.prototype.createStateByClassMap_","transpose"]
}
