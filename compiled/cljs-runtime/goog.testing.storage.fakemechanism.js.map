{
"version":3,
"file":"goog.testing.storage.fakemechanism.js",
"lineCount":31,
"mappings":"AAUA,IAAA,CAAA,UAAA,CAAA,QAAA,CAAA,OAAA,CAAA;AAAA,cAAA;AAAAA,MAAKC,CAAAA,MAAL,CAAY,oCAAZ,CAAA;AACAD,MAAKC,CAAAA,MAAOC,CAAAA,sBAAZ,EAAA;AACAF,MAAKG,CAAAA,WAAL,CAAiB,oCAAjB,CAAA;AAEA,QAAMC,oBAAoBJ,IAAKK,CAAAA,OAAL,CAAa,0CAAb,CAA1B;AACA,QAAMC,WAAWN,IAAKK,CAAAA,OAAL,CAAa,oBAAb,CAAjB;AACA,QAAM,CAACE,YAAD,CAAA,GAAiBP,IAAKK,CAAAA,OAAL,CAAa,eAAb,CAAvB;AAWA,QAAMG,gBAAgBA,QAAQ,EAAG;AAK/B,QAAKC,CAAAA,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;AAL+B,GAAjC;AAOAV,MAAKW,CAAAA,QAAL,CAAcH,aAAd,EAA6BJ,iBAA7B,CAAA;AAUAI,eAAcI,CAAAA,SAAUC,CAAAA,GAAxB,GAA8BC,QAAQ,CAACC,GAAD,EAAMC,KAAN,CAAa;AAEjD,QAAKP,CAAAA,QAASI,CAAAA,GAAd,CAAkBE,GAAlB,EAAuBC,KAAvB,CAAA;AAFiD,GAAnD;AAaAR,eAAcI,CAAAA,SAAUK,CAAAA,GAAxB,GAA8BC,QAAQ,CAACH,GAAD,CAAM;AAE1C,QAAI,IAAKN,CAAAA,QAASU,CAAAA,GAAd,CAAkBJ,GAAlB,CAAJ;AACE,aAAO,IAAKN,CAAAA,QAASQ,CAAAA,GAAd,CAAkBF,GAAlB,CAAP;AADF;AAGA,WAAO,IAAP;AAL0C,GAA5C;AAeAP,eAAcI,CAAAA,SAAUQ,CAAAA,MAAxB,GAAiCC,QAAQ,CAACN,GAAD,CAAM;AAE7C,QAAKN,CAAAA,QAASa,CAAAA,MAAd,CAAqBP,GAArB,CAAA;AAF6C,GAA/C;AAeAP,eAAcI,CAAAA,SAAUW,CAAAA,YAAxB,GAAuCC,QAAQ,CAACC,QAAD,CAAW;AAExD,WAAOA,QAAA,GAAWlB,YAAamB,CAAAA,EAAb,CAAgB,IAAKjB,CAAAA,QAASkB,CAAAA,IAAd,EAAhB,CAAsCC,CAAAA,MAAtC,EAAX,GACWrB,YAAamB,CAAAA,EAAb,CAAgB,IAAKjB,CAAAA,QAASoB,CAAAA,MAAd,EAAhB,CAAwCD,CAAAA,MAAxC,EADlB;AAFwD,GAA1D;AAMAE,SAAA,GAAUtB,aAAV;AAnFA,SAAA,OAAA;AAAA,CAAA,CAAA;;",
"sources":["goog/testing/storage/fakemechanism.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Provides a fake storage mechanism for testing.\n */\n\ngoog.module('goog.testing.storage.FakeMechanism');\ngoog.module.declareLegacyNamespace();\ngoog.setTestOnly('goog.testing.storage.FakeMechanism');\n\nconst IterableMechanism = goog.require('goog.storage.mechanism.IterableMechanism');\nconst Iterator = goog.require('goog.iter.Iterator');\nconst {ShimIterable} = goog.require('goog.iter.es6');\n\n\n\n/**\n * Creates a fake iterable mechanism.\n *\n * @constructor\n * @extends {IterableMechanism}\n * @final\n */\nconst FakeMechanism = function() {\n  /**\n   * @type {!Map}\n   * @private\n   */\n  this.storage_ = new Map();\n};\ngoog.inherits(FakeMechanism, IterableMechanism);\n\n\n/**\n * Set a value for a key.\n *\n * @param {string} key The key to set.\n * @param {string} value The string to save.\n * @override\n */\nFakeMechanism.prototype.set = function(key, value) {\n  'use strict';\n  this.storage_.set(key, value);\n};\n\n\n/**\n * Get the value stored under a key.\n *\n * @param {string} key The key to get.\n * @return {?string} The corresponding value, null if not found.\n * @override\n */\nFakeMechanism.prototype.get = function(key) {\n  'use strict';\n  if (this.storage_.has(key)) {\n    return this.storage_.get(key);\n  }\n  return null;\n};\n\n\n/**\n * Remove a key and its value.\n *\n * @param {string} key The key to remove.\n * @override\n */\nFakeMechanism.prototype.remove = function(key) {\n  'use strict';\n  this.storage_.delete(key);\n};\n\n\n/**\n * Returns an iterator that iterates over the elements in the storage. Will\n * throw goog.iter.StopIteration after the last element.\n *\n * @param {boolean=} opt_keys True to iterate over the keys. False to iterate\n *     over the values.  The default value is false.\n * @return {!Iterator} The iterator.\n * @override\n */\nFakeMechanism.prototype.__iterator__ = function(opt_keys) {\n  'use strict';\n  return opt_keys ? ShimIterable.of(this.storage_.keys()).toGoog() :\n                    ShimIterable.of(this.storage_.values()).toGoog();\n};\n\nexports = FakeMechanism;\n"],
"names":["goog","module","declareLegacyNamespace","setTestOnly","IterableMechanism","require","Iterator","ShimIterable","FakeMechanism","storage_","Map","inherits","prototype","set","FakeMechanism.prototype.set","key","value","get","FakeMechanism.prototype.get","has","remove","FakeMechanism.prototype.remove","delete","__iterator__","FakeMechanism.prototype.__iterator__","opt_keys","of","keys","toGoog","values","exports"]
}
