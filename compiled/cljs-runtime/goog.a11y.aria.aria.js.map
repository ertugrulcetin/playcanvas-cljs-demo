{
"version":3,
"file":"goog.a11y.aria.aria.js",
"lineCount":129,
"mappings":"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",
"sources":["goog/a11y/aria/aria.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n\n/**\n * @fileoverview Utilities for adding, removing and setting ARIA roles and\n * states as defined by W3C ARIA standard: http://www.w3.org/TR/wai-aria/\n * All modern browsers have some form of ARIA support, so no browser checks are\n * performed when adding ARIA to components.\n */\n\ngoog.provide('goog.a11y.aria');\n\ngoog.require('goog.a11y.aria.Role');\ngoog.require('goog.a11y.aria.State');\ngoog.require('goog.a11y.aria.datatables');\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.dom');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.object');\ngoog.require('goog.string');\n\n\n/**\n * ARIA states/properties prefix.\n * @private\n */\ngoog.a11y.aria.ARIA_PREFIX_ = 'aria-';\n\n\n/**\n * ARIA role attribute.\n * @private\n */\ngoog.a11y.aria.ROLE_ATTRIBUTE_ = 'role';\n\n\n/**\n * A list of tag names for which we don't need to set ARIA role and states\n * because they have well supported semantics for screen readers or because\n * they don't contain content to be made accessible.\n * @private\n */\ngoog.a11y.aria.TAGS_WITH_ASSUMED_ROLES_ = goog.object.createSet([\n  goog.dom.TagName.A, goog.dom.TagName.AREA, goog.dom.TagName.BUTTON,\n  goog.dom.TagName.HEAD, goog.dom.TagName.INPUT, goog.dom.TagName.LINK,\n  goog.dom.TagName.MENU, goog.dom.TagName.META, goog.dom.TagName.OPTGROUP,\n  goog.dom.TagName.OPTION, goog.dom.TagName.PROGRESS, goog.dom.TagName.STYLE,\n  goog.dom.TagName.SELECT, goog.dom.TagName.SOURCE, goog.dom.TagName.TEXTAREA,\n  goog.dom.TagName.TITLE, goog.dom.TagName.TRACK\n]);\n\n\n/**\n * A list of roles which are considered container roles.\n * Container roles are ARIA roles which use the aria-activedescendant property\n * to manage their active descendants or children. See\n * {@link http://www.w3.org/TR/wai-aria/states_and_properties\n * #aria-activedescendant} for more information.\n * @private @const {!Array<goog.a11y.aria.Role>}\n */\ngoog.a11y.aria.CONTAINER_ROLES_ = [\n  goog.a11y.aria.Role.COMBOBOX, goog.a11y.aria.Role.GRID,\n  goog.a11y.aria.Role.GROUP, goog.a11y.aria.Role.LISTBOX,\n  goog.a11y.aria.Role.MENU, goog.a11y.aria.Role.MENUBAR,\n  goog.a11y.aria.Role.RADIOGROUP, goog.a11y.aria.Role.ROW,\n  goog.a11y.aria.Role.ROWGROUP, goog.a11y.aria.Role.TAB_LIST,\n  goog.a11y.aria.Role.TEXTBOX, goog.a11y.aria.Role.TOOLBAR,\n  goog.a11y.aria.Role.TREE, goog.a11y.aria.Role.TREEGRID\n];\n\n\n/**\n * Sets the role of an element. If the roleName is\n * empty string or null, the role for the element is removed.\n * We encourage clients to call the goog.a11y.aria.removeRole\n * method instead of setting null and empty string values.\n * Special handling for this case is added to ensure\n * backword compatibility with existing code.\n *\n * @param {!Element} element DOM node to set role of.\n * @param {!goog.a11y.aria.Role|string} roleName role name(s).\n */\ngoog.a11y.aria.setRole = function(element, roleName) {\n  'use strict';\n  if (!roleName) {\n    // Setting the ARIA role to empty string is not allowed\n    // by the ARIA standard.\n    goog.a11y.aria.removeRole(element);\n  } else {\n    if (goog.asserts.ENABLE_ASSERTS) {\n      goog.asserts.assert(\n          goog.object.containsValue(goog.a11y.aria.Role, roleName),\n          'No such ARIA role ' + roleName);\n    }\n    element.setAttribute(goog.a11y.aria.ROLE_ATTRIBUTE_, roleName);\n  }\n};\n\n\n/**\n * Gets role of an element.\n * @param {!Element} element DOM element to get role of.\n * @return {?goog.a11y.aria.Role} ARIA Role name.\n */\ngoog.a11y.aria.getRole = function(element) {\n  'use strict';\n  var role = element.getAttribute(goog.a11y.aria.ROLE_ATTRIBUTE_);\n  return /** @type {goog.a11y.aria.Role} */ (role) || null;\n};\n\n\n/**\n * Removes role of an element.\n * @param {!Element} element DOM element to remove the role from.\n */\ngoog.a11y.aria.removeRole = function(element) {\n  'use strict';\n  element.removeAttribute(goog.a11y.aria.ROLE_ATTRIBUTE_);\n};\n\n\n/**\n * Sets the state or property of an element.\n * @param {!Element} element DOM node where we set state.\n * @param {!(goog.a11y.aria.State|string)} stateName State attribute being set.\n *     Automatically adds prefix 'aria-' to the state name if the attribute is\n *     not an extra attribute.\n * @param {string|boolean|number|!Array<string>} value Value\n * for the state attribute.\n */\ngoog.a11y.aria.setState = function(element, stateName, value) {\n  'use strict';\n  if (Array.isArray(value)) {\n    value = value.join(' ');\n  }\n  var attrStateName = goog.a11y.aria.getAriaAttributeName_(stateName);\n  if (value === '' || value == undefined) {\n    var defaultValueMap = goog.a11y.aria.datatables.getDefaultValuesMap();\n    // Work around for browsers that don't properly support ARIA.\n    // According to the ARIA W3C standard, user agents should allow\n    // setting empty value which results in setting the default value\n    // for the ARIA state if such exists. The exact text from the ARIA W3C\n    // standard (http://www.w3.org/TR/wai-aria/states_and_properties):\n    // \"When a value is indicated as the default, the user agent\n    // MUST follow the behavior prescribed by this value when the state or\n    // property is empty or undefined.\"\n    // The defaultValueMap contains the default values for the ARIA states\n    // and has as a key the goog.a11y.aria.State constant for the state.\n    if (stateName in defaultValueMap) {\n      element.setAttribute(attrStateName, defaultValueMap[stateName]);\n    } else {\n      element.removeAttribute(attrStateName);\n    }\n  } else {\n    element.setAttribute(attrStateName, value);\n  }\n};\n\n\n/**\n * Toggles the ARIA attribute of an element.\n * Meant for attributes with a true/false value, but works with any attribute.\n * If the attribute does not have a true/false value, the following rules apply:\n * A not empty attribute will be removed.\n * An empty attribute will be set to true.\n * @param {!Element} el DOM node for which to set attribute.\n * @param {!(goog.a11y.aria.State|string)} attr ARIA attribute being set.\n *     Automatically adds prefix 'aria-' to the attribute name if the attribute\n *     is not an extra attribute.\n */\ngoog.a11y.aria.toggleState = function(el, attr) {\n  'use strict';\n  var val = goog.a11y.aria.getState(el, attr);\n  if (!goog.string.isEmptyOrWhitespace(goog.string.makeSafe(val)) &&\n      !(val == 'true' || val == 'false')) {\n    goog.a11y.aria.removeState(el, /** @type {!goog.a11y.aria.State} */ (attr));\n    return;\n  }\n  goog.a11y.aria.setState(el, attr, val == 'true' ? 'false' : 'true');\n};\n\n\n/**\n * Remove the state or property for the element.\n * @param {!Element} element DOM node where we set state.\n * @param {!goog.a11y.aria.State} stateName State name.\n */\ngoog.a11y.aria.removeState = function(element, stateName) {\n  'use strict';\n  element.removeAttribute(goog.a11y.aria.getAriaAttributeName_(stateName));\n};\n\n\n/**\n * Gets value of specified state or property.\n * @param {!Element} element DOM node to get state from.\n * @param {!goog.a11y.aria.State|string} stateName State name.\n * @return {string} Value of the state attribute.\n */\ngoog.a11y.aria.getState = function(element, stateName) {\n  'use strict';\n  // TODO(user): return properly typed value result --\n  // boolean, number, string, null. We should be able to chain\n  // getState(...) and setState(...) methods.\n\n  var attr =\n      /** @type {string|number|boolean} */ (\n          element.getAttribute(\n              goog.a11y.aria.getAriaAttributeName_(stateName)));\n  var isNullOrUndefined = attr == null || attr == undefined;\n  return isNullOrUndefined ? '' : String(attr);\n};\n\n\n/**\n * Returns the activedescendant element for the input element by\n * using the activedescendant ARIA property of the given element.\n * @param {!Element} element DOM node to get activedescendant\n *     element for.\n * @return {?Element} DOM node of the activedescendant, if found.\n */\ngoog.a11y.aria.getActiveDescendant = function(element) {\n  'use strict';\n  var id =\n      goog.a11y.aria.getState(element, goog.a11y.aria.State.ACTIVEDESCENDANT);\n  return goog.dom.getOwnerDocument(element).getElementById(id);\n};\n\n\n/**\n * Sets the activedescendant ARIA property value for an element.\n * If the activeElement is not null, it should have an id set.\n * @param {!Element} element DOM node to set activedescendant ARIA property to.\n * @param {?Element} activeElement DOM node being set as activedescendant.\n */\ngoog.a11y.aria.setActiveDescendant = function(element, activeElement) {\n  'use strict';\n  var id = '';\n  if (activeElement) {\n    id = activeElement.id;\n    goog.asserts.assert(id, 'The active element should have an id.');\n  }\n\n  goog.a11y.aria.setState(element, goog.a11y.aria.State.ACTIVEDESCENDANT, id);\n};\n\n\n/**\n * Gets the label of the given element.\n * @param {!Element} element DOM node to get label from.\n * @return {string} label The label.\n */\ngoog.a11y.aria.getLabel = function(element) {\n  'use strict';\n  return goog.a11y.aria.getState(element, goog.a11y.aria.State.LABEL);\n};\n\n\n/**\n * Sets the label of the given element.\n * @param {!Element} element DOM node to set label to.\n * @param {string} label The label to set.\n */\ngoog.a11y.aria.setLabel = function(element, label) {\n  'use strict';\n  goog.a11y.aria.setState(element, goog.a11y.aria.State.LABEL, label);\n};\n\n\n/**\n * Asserts that the element has a role set if it's not an HTML element whose\n * semantics is well supported by most screen readers.\n * Only to be used internally by the ARIA library in goog.a11y.aria.*.\n * @param {!Element} element The element to assert an ARIA role set.\n * @param {!IArrayLike<string>} allowedRoles The child roles of\n * the roles.\n */\ngoog.a11y.aria.assertRoleIsSetInternalUtil = function(element, allowedRoles) {\n  'use strict';\n  if (goog.a11y.aria.TAGS_WITH_ASSUMED_ROLES_[element.tagName]) {\n    return;\n  }\n  var elementRole = /** @type {string}*/ (goog.a11y.aria.getRole(element));\n  goog.asserts.assert(\n      elementRole != null, 'The element ARIA role cannot be null.');\n\n  goog.asserts.assert(\n      goog.array.contains(allowedRoles, elementRole),\n      'Non existing or incorrect role set for element.' +\n          'The role set is \"' + elementRole + '\". The role should be any of \"' +\n          allowedRoles + '\". Check the ARIA specification for more details ' +\n          'http://www.w3.org/TR/wai-aria/roles.');\n};\n\n\n/**\n * Gets the boolean value of an ARIA state/property.\n * @param {!Element} element The element to get the ARIA state for.\n * @param {!goog.a11y.aria.State|string} stateName the ARIA state name.\n * @return {?boolean} Boolean value for the ARIA state value or null if\n *     the state value is not 'true', not 'false', or not set.\n */\ngoog.a11y.aria.getStateBoolean = function(element, stateName) {\n  'use strict';\n  var attr =\n      /** @type {string|boolean|null} */ (element.getAttribute(\n          goog.a11y.aria.getAriaAttributeName_(stateName)));\n  goog.asserts.assert(\n      typeof attr === 'boolean' || attr == null || attr == 'true' ||\n      attr == 'false');\n  if (attr == null) {\n    return attr;\n  }\n  return typeof attr === 'boolean' ? attr : attr == 'true';\n};\n\n\n/**\n * Gets the number value of an ARIA state/property.\n * @param {!Element} element The element to get the ARIA state for.\n * @param {!goog.a11y.aria.State|string} stateName the ARIA state name.\n * @return {?number} Number value for the ARIA state value or null if\n *     the state value is not a number or not set.\n */\ngoog.a11y.aria.getStateNumber = function(element, stateName) {\n  'use strict';\n  var attr =\n      /** @type {string|number} */ (element.getAttribute(\n          goog.a11y.aria.getAriaAttributeName_(stateName)));\n  goog.asserts.assert(\n      (attr == null || !isNaN(Number(attr))) && typeof attr !== 'boolean');\n  return attr == null ? null : Number(attr);\n};\n\n\n/**\n * Gets the string value of an ARIA state/property.\n * @param {!Element} element The element to get the ARIA state for.\n * @param {!goog.a11y.aria.State|string} stateName the ARIA state name.\n * @return {?string} String value for the ARIA state value or null if\n *     the state value is empty string or not set.\n */\ngoog.a11y.aria.getStateString = function(element, stateName) {\n  'use strict';\n  var attr =\n      element.getAttribute(goog.a11y.aria.getAriaAttributeName_(stateName));\n  goog.asserts.assert(\n      (attr == null || typeof attr === 'string') &&\n      (attr == '' || isNaN(Number(attr))) && attr != 'true' && attr != 'false');\n  return (attr == null || attr == '') ? null : attr;\n};\n\n\n/**\n * Gets array of strings value of the specified state or\n * property for the element.\n * Only to be used internally by the ARIA library in goog.a11y.aria.*.\n * @param {!Element} element DOM node to get state from.\n * @param {!goog.a11y.aria.State} stateName State name.\n * @return {!IArrayLike<string>} string Array\n *     value of the state attribute.\n */\ngoog.a11y.aria.getStringArrayStateInternalUtil = function(element, stateName) {\n  'use strict';\n  var attrValue =\n      element.getAttribute(goog.a11y.aria.getAriaAttributeName_(stateName));\n  return goog.a11y.aria.splitStringOnWhitespace_(attrValue);\n};\n\n\n/**\n * Returns true if element has an ARIA state/property, false otherwise.\n * @param {!Element} element The element to get the ARIA state for.\n * @param {!goog.a11y.aria.State|string} stateName the ARIA state name.\n * @return {boolean}\n */\ngoog.a11y.aria.hasState = function(element, stateName) {\n  'use strict';\n  return element.hasAttribute(goog.a11y.aria.getAriaAttributeName_(stateName));\n};\n\n\n/**\n * Returns whether the element has a container ARIA role.\n * Container roles are ARIA roles that use the aria-activedescendant property\n * to manage their active descendants or children. See\n * {@link http://www.w3.org/TR/wai-aria/states_and_properties\n * #aria-activedescendant} for more information.\n * @param {!Element} element\n * @return {boolean}\n */\ngoog.a11y.aria.isContainerRole = function(element) {\n  'use strict';\n  var role = goog.a11y.aria.getRole(element);\n  return goog.array.contains(goog.a11y.aria.CONTAINER_ROLES_, role);\n};\n\n\n/**\n * Splits the input stringValue on whitespace.\n * @param {string} stringValue The value of the string to split.\n * @return {!IArrayLike<string>} string Array\n *     value as result of the split.\n * @private\n */\ngoog.a11y.aria.splitStringOnWhitespace_ = function(stringValue) {\n  'use strict';\n  return stringValue ? stringValue.split(/\\s+/) : [];\n};\n\n\n/**\n * Adds the 'aria-' prefix to ariaName.\n * @param {string} ariaName ARIA state/property name.\n * @private\n * @return {string} The ARIA attribute name with added 'aria-' prefix.\n * @throws {Error} If no such attribute exists.\n */\ngoog.a11y.aria.getAriaAttributeName_ = function(ariaName) {\n  'use strict';\n  if (goog.asserts.ENABLE_ASSERTS) {\n    goog.asserts.assert(ariaName, 'ARIA attribute cannot be empty.');\n    goog.asserts.assert(\n        goog.object.containsValue(goog.a11y.aria.State, ariaName),\n        'No such ARIA attribute ' + ariaName);\n  }\n  return goog.a11y.aria.ARIA_PREFIX_ + ariaName;\n};\n"],
"names":["goog","provide","require","a11y","aria","ARIA_PREFIX_","ROLE_ATTRIBUTE_","TAGS_WITH_ASSUMED_ROLES_","object","createSet","dom","TagName","A","AREA","BUTTON","HEAD","INPUT","LINK","MENU","META","OPTGROUP","OPTION","PROGRESS","STYLE","SELECT","SOURCE","TEXTAREA","TITLE","TRACK","CONTAINER_ROLES_","Role","COMBOBOX","GRID","GROUP","LISTBOX","MENUBAR","RADIOGROUP","ROW","ROWGROUP","TAB_LIST","TEXTBOX","TOOLBAR","TREE","TREEGRID","setRole","goog.a11y.aria.setRole","element","roleName","removeRole","asserts","ENABLE_ASSERTS","assert","containsValue","setAttribute","getRole","goog.a11y.aria.getRole","role","getAttribute","goog.a11y.aria.removeRole","removeAttribute","setState","goog.a11y.aria.setState","stateName","value","Array","isArray","join","attrStateName","getAriaAttributeName_","undefined","defaultValueMap","datatables","getDefaultValuesMap","toggleState","goog.a11y.aria.toggleState","el","attr","val","getState","string","isEmptyOrWhitespace","makeSafe","removeState","goog.a11y.aria.removeState","goog.a11y.aria.getState","isNullOrUndefined","String","getActiveDescendant","goog.a11y.aria.getActiveDescendant","id","State","ACTIVEDESCENDANT","getOwnerDocument","getElementById","setActiveDescendant","goog.a11y.aria.setActiveDescendant","activeElement","getLabel","goog.a11y.aria.getLabel","LABEL","setLabel","goog.a11y.aria.setLabel","label","assertRoleIsSetInternalUtil","goog.a11y.aria.assertRoleIsSetInternalUtil","allowedRoles","tagName","elementRole","array","contains","getStateBoolean","goog.a11y.aria.getStateBoolean","getStateNumber","goog.a11y.aria.getStateNumber","isNaN","Number","getStateString","goog.a11y.aria.getStateString","getStringArrayStateInternalUtil","goog.a11y.aria.getStringArrayStateInternalUtil","attrValue","splitStringOnWhitespace_","hasState","goog.a11y.aria.hasState","hasAttribute","isContainerRole","goog.a11y.aria.isContainerRole","goog.a11y.aria.splitStringOnWhitespace_","stringValue","split","goog.a11y.aria.getAriaAttributeName_","ariaName"]
}
