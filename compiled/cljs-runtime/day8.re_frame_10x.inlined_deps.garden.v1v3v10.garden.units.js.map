{"version":3,"sources":["day8/re_frame_10x/inlined_deps/garden/v1v3v10/garden/units.cljc"],"mappings":"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","names":["day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/length-units","cljs.core.keyword","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/angular-units","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/time-units","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/frequency-units","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/resolution-units","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/unit?","x","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.types/CSSUnit","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/length?","cljs.core/contains?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/angle?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/time?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/frequency?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/resolution?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/conversions","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/convertable?","unit","p__18607","map__18608","cljs.core/--destructure-map","cljs.core.get","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/convert","m","left","right","cljs.core/every?","v1","cljs.core.get_in","v2","cljs.core.ex_info","day8.re_frame_10x.inlined_deps.garden.v1v3v10.garden.util.format","cljs.core/name","cljs.core/first","cljs.core.drop_while","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/unit-re","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/read-unit","s","temp__5804__auto__","vec__18616","cljs.core.nth","_","magnitude","cljs.core/re-matches","cljs.reader.read_string","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/make-unit-predicate","cljs.core._EQ_","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/make-unit-fn","ex-message","ex-data","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/make-unit-adder","u","y","map__18632","map__18633","m1","m2","more","cljs.core.reduce","u+","day8$re_frame_10x$inlined_deps$garden$v1v3v10$garden$units$make_unit_adder_$_u_PLUS_","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/make-unit-subtractor","map__18642","map__18643","u-","day8$re_frame_10x$inlined_deps$garden$v1v3v10$garden$units$make_unit_subtractor_$_u_","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/make-unit-multiplier","op","cljs.core/*","map__18650","map__18651","u*","day8$re_frame_10x$inlined_deps$garden$v1v3v10$garden$units$make_unit_multiplier_$_u_STAR_","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/make-unit-divider","cljs.core//","map__18659","map__18660","ud","day8$re_frame_10x$inlined_deps$garden$v1v3v10$garden$units$make_unit_divider_$_ud","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/cm?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/cm+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/cm-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/cm*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/cm-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/cm","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/mm?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/mm+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/mm-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/mm*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/mm-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/mm","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/in?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/in+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/in-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/in*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/in-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/in","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/px?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/px+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/px-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/px*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/px-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/px","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/pt?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/pt+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/pt-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/pt*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/pt-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/pt","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/pc?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/pc+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/pc-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/pc*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/pc-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/pc","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/percent?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/percent+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/percent-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/percent*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/percent-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/percent","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/em?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/em+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/em-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/em*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/em-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/em","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ex?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ex+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ex-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ex*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ex-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ex","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ch?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ch+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ch-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ch*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ch-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ch","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/rem?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/rem+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/rem-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/rem*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/rem-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/rem","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vw?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vw+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vw-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vw*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vw-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vw","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vh?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vh+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vh-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vh*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vh-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vh","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vmin?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vmin+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vmin-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vmin*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vmin-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vmin","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vmax?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vmax+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vmax-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vmax*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vmax-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/vmax","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/deg?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/deg+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/deg-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/deg*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/deg-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/deg","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/grad?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/grad+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/grad-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/grad*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/grad-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/grad","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/rad?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/rad+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/rad-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/rad*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/rad-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/rad","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/turn?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/turn+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/turn-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/turn*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/turn-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/turn","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/s?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/s+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/s-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/s*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/s-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/s","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ms?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ms+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ms-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ms*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ms-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/ms","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/Hz?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/Hz+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/Hz-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/Hz*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/Hz-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/Hz","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/kHz?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/kHz+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/kHz-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/kHz*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/kHz-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/kHz","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dpi?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dpi+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dpi-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dpi*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dpi-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dpi","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dpcm?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dpcm+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dpcm-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dpcm*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dpcm-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dpcm","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dppx?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dppx+","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dppx-","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dppx*","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dppx-div","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/dppx"],"sourcesContent":["(ns ^{:mranderson/inlined true} day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units\n  \"Functions and macros for working with CSS units.\"\n  (:refer-clojure :exclude [rem])\n  #?@(:clj\n     [(:require\n       [day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.types :as types]\n       [day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.util :as util])\n      (:import\n       [day8.re_frame_10x.inlined_deps.garden.v1v3v10.garden.types CSSUnit])])\n  #?@(:cljs\n      [(:require\n        [cljs.reader :refer [read-string]]\n        [day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.types :as types :refer [CSSUnit]]\n        [day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.util :as util])\n       (:require-macros\n        [day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units :refer [defunit]])]))\n\n;;;; ## Unit families\n\n(def length-units\n  #{:in :cm :pc :mm :pt :px (keyword \"%\")})\n\n(def angular-units\n  #{:deg :grad :rad :turn})\n\n(def time-units\n  #{:s :ms})\n\n(def frequency-units\n  #{:Hz :kHz})\n\n(def resolution-units\n  #{:dpi :dpcm :dppx})\n\n;;;; ## Unit predicates\n\n(defn unit?\n  \"True if x is of type CSSUnit.\"\n  [x]\n  (instance? CSSUnit x))\n\n(defn length?\n  [x]\n  (and (unit? x)\n       (contains? length-units (:unit x))))\n\n(defn angle?\n  [x]\n  (and (unit? x)\n       (contains? angular-units (:unit x))))\n\n(defn time?\n  [x]\n  (and (unit? x)\n       (contains? time-units (:unit x))))\n\n(defn frequency?\n  [x]\n  (and (unit? x)\n       (contains? frequency-units (:unit x))))\n\n(defn resolution?\n  [x]\n  (and (unit? x)\n       (contains? resolution-units (:unit x))))\n\n;;;; ## Unit conversion\n\n(def ^{:private true\n       :doc \"Map associating CSS unit types to their conversion values.\"}\n  conversions\n  {;; Absolute units\n   :cm {:cm 1\n        :mm 10\n        :pc 2.36220473\n        :pt 28.3464567\n        :px 37.795275591}\n   :in {:cm 2.54\n        :in 1\n        :mm 25.4\n        :pc 6\n        :pt 72\n        :px 96}\n   :mm {:mm 1\n        :pt 2.83464567\n        :px 3.7795275591}\n   :pc {:mm 4.23333333\n        :pc 1\n        :pt 12\n        :px 16}\n   :pt {:pt 1\n        :px 1.3333333333}\n   :px {:px 1}\n   (keyword \"%\") {(keyword \"%\") 1}\n\n   ;; Relative untis\n   :em {:em 1}\n   :rem {:rem 1}\n\n   ;; Angular units\n   :deg {:deg 1\n         :grad 1.111111111\n         :rad 0.0174532925\n         :turn 0.002777778}\n   :grad {:grad 1\n          :rad 63.661977237\n          :turn 0.0025}\n   :rad {:rad 1\n         :turn 0.159154943}\n   :turn {:turn 1}\n\n   ;; Time units\n   :s {:ms 1000\n       :s 1}\n   :ms {:ms 1}\n\n   ;; Frequency units\n   :Hz {:Hz 1\n        :kHz 0.001}\n   :kHz {:kHz 1}})\n\n(defn- convertable?\n  \"True if unit is a key of convertable-units, false otherwise.\"\n  [unit]\n  (contains? conversions unit))\n\n(defn- convert\n  \"Convert a Unit with :unit left to a Unit with :unit right if possible.\"\n  [{m :magnitude left :unit} right]\n  (if (every? convertable? [left right])\n    (let [v1 (get-in conversions [left right])\n          v2 (get-in conversions [right left])]\n      (cond\n        v1\n        (CSSUnit. right (* v1 m))\n\n        v2\n        (CSSUnit. right (/ m v2))\n\n       ;; Both units are convertible but no conversion between them exists.\n       :else\n       (throw\n        (ex-info\n         (util/format \"Can't convert %s to %s\" (name left) (name right)) {}))))\n    ;; Display the inconvertible unit.\n    (let [x (first (drop-while convertable? [left right]))]\n      (throw (ex-info (str \"Inconvertible unit \" (name x)) {})))))\n\n;;;; ## Unit helpers\n\n(def ^{:doc \"Regular expression for matching a CSS unit. The magnitude\n             and unit are captured.\"\n       :private true}\n  unit-re\n  #\"([+-]?\\d+(?:\\.?\\d+)?)(p[xtc]|in|[cm]m|%|r?em|ex|ch|v(?:[wh]|m(?:in|ax))|deg|g?rad|turn|m?s|k?Hz|dp(?:i|cm|px))\")\n\n(defn read-unit\n  \"Read a `CSSUnit` object from the string `s`.\"\n  [s]\n  (when-let [[_ magnitude unit] (re-matches unit-re s)]\n    (let [unit (keyword unit)\n          magnitude (if magnitude (read-string magnitude) 0)]\n      (CSSUnit. unit magnitude))))\n\n(defn make-unit-predicate\n  \"Creates a function for verifying the given unit type.\"\n  [unit]\n  (fn [x] (and (unit? x) (= (:unit x) unit))))\n\n(defn make-unit-fn\n  \"Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it.\"\n  [unit]\n  (fn [x]\n    (cond\n      (number? x)\n      (CSSUnit. unit x)\n\n      (unit? x)\n      (if (and (= (unit x) unit))\n        x\n        (convert x unit))\n\n      :else\n      (let [ex-message (util/format \"Unable to convert %s to %s\"\n                                    x\n                                    (name unit))\n            ex-data {:given {:x x\n                             :unit unit}}]\n        (throw\n         (ex-info ex-message ex-data))))))\n\n(defn make-unit-adder\n  \"Create a addition function for adding Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u+\n      ([] (u 0))\n      ([x] (u x))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (+ m1 m2))))\n      ([x y & more]\n         (reduce u+ (u+ x y) more)))))\n\n(defn make-unit-subtractor\n  \"Create a subtraction function for subtracting Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u-\n      ([x] (u (- x)))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (- m1 m2))))\n      ([x y & more]\n         (reduce u- (u- x y) more)))))\n\n(defn make-unit-multiplier\n  \"Create a multiplication function for multiplying Units.\"\n  [unit]\n  (let [u  (make-unit-fn unit)\n        op (if (= unit :%)\n            (fn percent*\n              [x y]\n              (/ (* x y) 100))\n            *)]\n    (fn u*\n      ([] (u 1))\n      ([x] (u x))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (op m1 m2))))\n      ([x y & more]\n         (reduce u* (u* x y) more)))))\n\n(defn make-unit-divider\n  \"Create a division function for dividing Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)\n        op (if (= unit :%)\n            (fn percent-div\n              [x y]\n              (* 100 (/ x y)))\n             /)]\n    (fn ud\n      ([x] (u (/ 1 x)))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (op m1 m2))))\n      ([x y & more]\n         (reduce ud (ud x y) more)))))\n\n#?(:clj\n   (defmacro defunit\n     \"Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.\"\n     ([name]\n      `(defunit ~name ~name))\n     ([name unit]\n      (let [k (keyword unit)\n            append #(symbol (str name %))]\n        `(do\n           (def ~name (make-unit-fn ~k))\n           (def ~(append \\?) (make-unit-predicate ~k))\n           (def ~(append \\+) (make-unit-adder ~k))\n           (def ~(append \\-) (make-unit-subtractor ~k))\n           (def ~(append \\*) (make-unit-multiplier ~k))\n           (def ~(append \"-div\") (make-unit-divider ~k)))))))\n\n(comment\n  ;; This:\n  (defunit px)\n  ;; Is equivalent to:\n  (def px  (make-unit-fn :px))\n  (def px? (make-unit-predicate :px))\n  (def px+ (make-unit-adder :px))\n  (def px- (make-unit-subtractor :px))\n  (def px* (make-unit-multiplier :px))\n  (def px-div (make-unit-divider :px)))\n\n;; # Predefined units\n\n;; Absolute units\n\n(defunit cm)\n(defunit mm)\n(defunit in)\n(defunit px)\n(defunit pt)\n(defunit pc)\n(defunit percent \"%\")\n\n;; Font-relative units\n\n(defunit em)\n(defunit ex)\n(defunit ch)\n(defunit rem)\n\n;; Viewport-percentage lengths\n\n(defunit vw)\n(defunit vh)\n(defunit vmin)\n(defunit vmax)\n\n;; Angles\n\n(defunit deg)\n(defunit grad)\n(defunit rad)\n(defunit turn)\n\n;; Times\n\n(defunit s)\n(defunit ms)\n\n;; Frequencies\n\n(defunit Hz)\n(defunit kHz)\n\n;; Resolutions\n\n(defunit dpi)\n(defunit dpcm)\n(defunit dppx)\n"]}