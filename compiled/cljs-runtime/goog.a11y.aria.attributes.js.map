{
"version":3,
"file":"goog.a11y.aria.attributes.js",
"lineCount":28,
"mappings":"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",
"sources":["goog/a11y/aria/attributes.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n\n/**\n * @fileoverview The file contains generated enumerations for ARIA states\n * and properties as defined by W3C ARIA standard:\n * http://www.w3.org/TR/wai-aria/.\n *\n * This is auto-generated code. Do not manually edit! For more details\n * about how to edit it via the generator check go/closure-ariagen.\n */\n\ngoog.provide('goog.a11y.aria.AutoCompleteValues');\ngoog.provide('goog.a11y.aria.CheckedValues');\ngoog.provide('goog.a11y.aria.DropEffectValues');\ngoog.provide('goog.a11y.aria.ExpandedValues');\ngoog.provide('goog.a11y.aria.GrabbedValues');\ngoog.provide('goog.a11y.aria.InvalidValues');\ngoog.provide('goog.a11y.aria.LivePriority');\ngoog.provide('goog.a11y.aria.OrientationValues');\ngoog.provide('goog.a11y.aria.PressedValues');\ngoog.provide('goog.a11y.aria.RelevantValues');\ngoog.provide('goog.a11y.aria.SelectedValues');\ngoog.provide('goog.a11y.aria.SortValues');\ngoog.provide('goog.a11y.aria.State');\n\n\n/**\n * ARIA states and properties.\n * @enum {string}\n */\ngoog.a11y.aria.State = {\n  // ARIA property for setting the currently active descendant of an element,\n  // for example the selected item in a list box. Value: ID of an element.\n  ACTIVEDESCENDANT: 'activedescendant',\n\n  // ARIA property that, if true, indicates that all of a changed region should\n  // be presented, instead of only parts. Value: one of {true, false}.\n  ATOMIC: 'atomic',\n\n  // ARIA property to specify that input completion is provided. Value:\n  // one of {'inline', 'list', 'both', 'none'}.\n  AUTOCOMPLETE: 'autocomplete',\n\n  // ARIA state to indicate that an element and its subtree are being updated.\n  // Value: one of {true, false}.\n  BUSY: 'busy',\n\n  // ARIA state for a checked item. Value: one of {'true', 'false', 'mixed',\n  // undefined}.\n  CHECKED: 'checked',\n\n  // ARIA state that defines an element's column index or position with respect\n  // to the total number of columns within a table, grid, or treegrid.\n  // Value: number.\n  COLINDEX: 'colindex',\n\n  // ARIA property that identifies the element or elements whose contents or\n  // presence are controlled by this element.\n  // Value: space-separated IDs of other elements.\n  CONTROLS: 'controls',\n\n  // ARIA property that identifies the element that represents the current\n  // item within a container or set of related elements.\n  // Value: one of {'page', 'step', 'location', 'date', 'time', true, false}.\n  CURRENT: 'current',\n\n  // ARIA property that identifies the element or elements that describe\n  // this element. Value: space-separated IDs of other elements.\n  DESCRIBEDBY: 'describedby',\n\n  // ARIA state for a disabled item. Value: one of {true, false}.\n  DISABLED: 'disabled',\n\n  // ARIA property that indicates what functions can be performed when a\n  // dragged object is released on the drop target.  Value: one of\n  // {'copy', 'move', 'link', 'execute', 'popup', 'none'}.\n  DROPEFFECT: 'dropeffect',\n\n  // ARIA state for setting whether the element like a tree node is expanded.\n  // Value: one of {true, false, undefined}.\n  EXPANDED: 'expanded',\n\n  // ARIA property that identifies the next element (or elements) in the\n  // recommended reading order of content. Value: space-separated ids of\n  // elements to flow to.\n  FLOWTO: 'flowto',\n\n  // ARIA state that indicates an element's \"grabbed\" state in drag-and-drop.\n  // Value: one of {true, false, undefined}.\n  GRABBED: 'grabbed',\n\n  // ARIA property indicating whether the element has a popup.\n  // Value: one of {true, false}.\n  HASPOPUP: 'haspopup',\n\n  // ARIA state indicating that the element is not visible or perceivable\n  // to any user. Value: one of {true, false}.\n  HIDDEN: 'hidden',\n\n  // ARIA state indicating that the entered value does not conform. Value:\n  // one of {false, true, 'grammar', 'spelling'}\n  INVALID: 'invalid',\n\n  // ARIA property that provides a label to override any other text, value, or\n  // contents used to describe this element. Value: string.\n  LABEL: 'label',\n\n  // ARIA property for setting the element which labels another element.\n  // Value: space-separated IDs of elements.\n  LABELLEDBY: 'labelledby',\n\n  // ARIA property for setting the level of an element in the hierarchy.\n  // Value: integer.\n  LEVEL: 'level',\n\n  // ARIA property indicating that an element will be updated, and\n  // describes the types of updates the user agents, assistive technologies,\n  // and user can expect from the live region. Value: one of {'off', 'polite',\n  // 'assertive'}.\n  LIVE: 'live',\n\n  // ARIA property indicating whether a text box can accept multiline input.\n  // Value: one of {true, false}.\n  MULTILINE: 'multiline',\n\n  // ARIA property indicating if the user may select more than one item.\n  // Value: one of {true, false}.\n  MULTISELECTABLE: 'multiselectable',\n\n  // ARIA property indicating if the element is horizontal or vertical.\n  // Value: one of {'vertical', 'horizontal'}.\n  ORIENTATION: 'orientation',\n\n  // ARIA property creating a visual, functional, or contextual parent/child\n  // relationship when the DOM hierarchy can't be used to represent it.\n  // Value: Space-separated IDs of elements.\n  OWNS: 'owns',\n\n  // ARIA property that defines an element's number of position in a list.\n  // Value: integer.\n  POSINSET: 'posinset',\n\n  // ARIA state for a pressed item.\n  // Value: one of {true, false, undefined, 'mixed'}.\n  PRESSED: 'pressed',\n\n  // ARIA property indicating that an element is not editable.\n  // Value: one of {true, false}.\n  READONLY: 'readonly',\n\n  // ARIA property indicating that change notifications within this subtree\n  // of a live region should be announced. Value: one of {'additions',\n  // 'removals', 'text', 'all', 'additions text'}.\n  RELEVANT: 'relevant',\n\n  // ARIA property indicating that user input is required on this element\n  // before a form may be submitted. Value: one of {true, false}.\n  REQUIRED: 'required',\n\n  // ARIA state that defines an element's row index or position with respect\n  // to the total number of rows within a table, grid, or treegrid.\n  // Value: number.\n  ROWINDEX: 'rowindex',\n\n  // ARIA state for setting the currently selected item in the list.\n  // Value: one of {true, false, undefined}.\n  SELECTED: 'selected',\n\n  // ARIA property defining the number of items in a list. Value: integer.\n  SETSIZE: 'setsize',\n\n  // ARIA property indicating if items are sorted. Value: one of {'ascending',\n  // 'descending', 'none', 'other'}.\n  SORT: 'sort',\n\n  // ARIA property for slider maximum value. Value: number.\n  VALUEMAX: 'valuemax',\n\n  // ARIA property for slider minimum value. Value: number.\n  VALUEMIN: 'valuemin',\n\n  // ARIA property for slider active value. Value: number.\n  VALUENOW: 'valuenow',\n\n  // ARIA property for slider active value represented as text.\n  // Value: string.\n  VALUETEXT: 'valuetext'\n};\n\n\n/**\n * ARIA state values for AutoCompleteValues.\n * @enum {string}\n */\ngoog.a11y.aria.AutoCompleteValues = {\n  // The system provides text after the caret as a suggestion\n  // for how to complete the field.\n  INLINE: 'inline',\n  // A list of choices appears from which the user can choose,\n  // but the edit box retains focus.\n  LIST: 'list',\n  // A list of choices appears and the currently selected suggestion\n  // also appears inline.\n  BOTH: 'both',\n  // No input completion suggestions are provided.\n  NONE: 'none'\n};\n\n\n/**\n * ARIA state values for DropEffectValues.\n * @enum {string}\n */\ngoog.a11y.aria.DropEffectValues = {\n  // A duplicate of the source object will be dropped into the target.\n  COPY: 'copy',\n  // The source object will be removed from its current location\n  // and dropped into the target.\n  MOVE: 'move',\n  // A reference or shortcut to the dragged object\n  // will be created in the target object.\n  LINK: 'link',\n  // A function supported by the drop target is\n  // executed, using the drag source as an input.\n  EXECUTE: 'execute',\n  // There is a popup menu or dialog that allows the user to choose\n  // one of the drag operations (copy, move, link, execute) and any other\n  // drag functionality, such as cancel.\n  POPUP: 'popup',\n  // No operation can be performed; effectively\n  // cancels the drag operation if an attempt is made to drop on this object.\n  NONE: 'none'\n};\n\n\n/**\n * ARIA state values for LivePriority.\n * @enum {string}\n */\ngoog.a11y.aria.LivePriority = {\n  // Updates to the region will not be presented to the user\n  // unless the assitive technology is currently focused on that region.\n  OFF: 'off',\n  // (Background change) Assistive technologies SHOULD announce\n  // updates at the next graceful opportunity, such as at the end of\n  // speaking the current sentence or when the user pauses typing.\n  POLITE: 'polite',\n  // This information has the highest priority and assistive\n  // technologies SHOULD notify the user immediately.\n  // Because an interruption may disorient users or cause them to not complete\n  // their current task, authors SHOULD NOT use the assertive value unless the\n  // interruption is imperative.\n  ASSERTIVE: 'assertive'\n};\n\n\n/**\n * ARIA state values for OrientationValues.\n * @enum {string}\n */\ngoog.a11y.aria.OrientationValues = {\n  // The element is oriented vertically.\n  VERTICAL: 'vertical',\n  // The element is oriented horizontally.\n  HORIZONTAL: 'horizontal'\n};\n\n\n/**\n * ARIA state values for RelevantValues.\n * @enum {string}\n */\ngoog.a11y.aria.RelevantValues = {\n  // Element nodes are added to the DOM within the live region.\n  ADDITIONS: 'additions',\n  // Text or element nodes within the live region are removed from the DOM.\n  REMOVALS: 'removals',\n  // Text is added to any DOM descendant nodes of the live region.\n  TEXT: 'text',\n  // Equivalent to the combination of all values, \"additions removals text\".\n  ALL: 'all'\n};\n\n\n/**\n * ARIA state values for SortValues.\n * @enum {string}\n */\ngoog.a11y.aria.SortValues = {\n  // Items are sorted in ascending order by this column.\n  ASCENDING: 'ascending',\n  // Items are sorted in descending order by this column.\n  DESCENDING: 'descending',\n  // There is no defined sort applied to the column.\n  NONE: 'none',\n  // A sort algorithm other than ascending or descending has been applied.\n  OTHER: 'other'\n};\n\n\n/**\n * ARIA state values for CheckedValues.\n * @enum {string}\n */\ngoog.a11y.aria.CheckedValues = {\n  // The selectable element is checked.\n  TRUE: 'true',\n  // The selectable element is not checked.\n  FALSE: 'false',\n  // Indicates a mixed mode value for a tri-state\n  // checkbox or menuitemcheckbox.\n  MIXED: 'mixed',\n  // The element does not support being checked.\n  UNDEFINED: 'undefined'\n};\n\n\n/**\n * ARIA state values for ExpandedValues.\n * @enum {string}\n */\ngoog.a11y.aria.ExpandedValues = {\n  // The element, or another grouping element it controls, is expanded.\n  TRUE: 'true',\n  // The element, or another grouping element it controls, is collapsed.\n  FALSE: 'false',\n  // The element, or another grouping element\n  // it controls, is neither expandable nor collapsible; all its\n  // child elements are shown or there are no child elements.\n  UNDEFINED: 'undefined'\n};\n\n\n/**\n * ARIA state values for GrabbedValues.\n * @enum {string}\n */\ngoog.a11y.aria.GrabbedValues = {\n  // Indicates that the element has been \"grabbed\" for dragging.\n  TRUE: 'true',\n  // Indicates that the element supports being dragged.\n  FALSE: 'false',\n  // Indicates that the element does not support being dragged.\n  UNDEFINED: 'undefined'\n};\n\n\n/**\n * ARIA state values for InvalidValues.\n * @enum {string}\n */\ngoog.a11y.aria.InvalidValues = {\n  // There are no detected errors in the value.\n  FALSE: 'false',\n  // The value entered by the user has failed validation.\n  TRUE: 'true',\n  // A grammatical error was detected.\n  GRAMMAR: 'grammar',\n  // A spelling error was detected.\n  SPELLING: 'spelling'\n};\n\n\n/**\n * ARIA state values for PressedValues.\n * @enum {string}\n */\ngoog.a11y.aria.PressedValues = {\n  // The element is pressed.\n  TRUE: 'true',\n  // The element supports being pressed but is not currently pressed.\n  FALSE: 'false',\n  // Indicates a mixed mode value for a tri-state toggle button.\n  MIXED: 'mixed',\n  // The element does not support being pressed.\n  UNDEFINED: 'undefined'\n};\n\n\n/**\n * ARIA state values for SelectedValues.\n * @enum {string}\n */\ngoog.a11y.aria.SelectedValues = {\n  // The selectable element is selected.\n  TRUE: 'true',\n  // The selectable element is not selected.\n  FALSE: 'false',\n  // The element is not selectable.\n  UNDEFINED: 'undefined'\n};\n"],
"names":["goog","provide","a11y","aria","State","ACTIVEDESCENDANT","ATOMIC","AUTOCOMPLETE","BUSY","CHECKED","COLINDEX","CONTROLS","CURRENT","DESCRIBEDBY","DISABLED","DROPEFFECT","EXPANDED","FLOWTO","GRABBED","HASPOPUP","HIDDEN","INVALID","LABEL","LABELLEDBY","LEVEL","LIVE","MULTILINE","MULTISELECTABLE","ORIENTATION","OWNS","POSINSET","PRESSED","READONLY","RELEVANT","REQUIRED","ROWINDEX","SELECTED","SETSIZE","SORT","VALUEMAX","VALUEMIN","VALUENOW","VALUETEXT","AutoCompleteValues","INLINE","LIST","BOTH","NONE","DropEffectValues","COPY","MOVE","LINK","EXECUTE","POPUP","LivePriority","OFF","POLITE","ASSERTIVE","OrientationValues","VERTICAL","HORIZONTAL","RelevantValues","ADDITIONS","REMOVALS","TEXT","ALL","SortValues","ASCENDING","DESCENDING","OTHER","CheckedValues","TRUE","FALSE","MIXED","UNDEFINED","ExpandedValues","GrabbedValues","InvalidValues","GRAMMAR","SPELLING","PressedValues","SelectedValues"]
}
