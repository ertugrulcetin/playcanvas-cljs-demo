{
"version":3,
"file":"goog.positioning.clientposition.js",
"lineCount":24,
"mappings":"AAUAA,IAAKC,CAAAA,OAAL,CAAa,iCAAb,CAAA;AAEAD,IAAKE,CAAAA,OAAL,CAAa,cAAb,CAAA;AACAF,IAAKE,CAAAA,OAAL,CAAa,UAAb,CAAA;AACAF,IAAKE,CAAAA,OAAL,CAAa,sBAAb,CAAA;AACAF,IAAKE,CAAAA,OAAL,CAAa,kBAAb,CAAA;AACAF,IAAKE,CAAAA,OAAL,CAAa,mCAAb,CAAA;AACAF,IAAKE,CAAAA,OAAL,CAAa,YAAb,CAAA;AACAF,IAAKG,CAAAA,WAAL,CAAiB,eAAjB,CAAA;AACAH,IAAKG,CAAAA,WAAL,CAAiB,gBAAjB,CAAA;AAiBAH,IAAKI,CAAAA,WAAYC,CAAAA,cAAjB,GAAkCC,QAAQ,CAACC,IAAD,EAAOC,QAAP,CAAiB;AAMzD,MAAKC,CAAAA,UAAL,GAAkBF,IAAA,YAAgBP,IAAKU,CAAAA,IAAKC,CAAAA,UAA1B,GACdJ,IADc,GAEd,IAAIP,IAAKU,CAAAA,IAAKC,CAAAA,UAAd,CAAgDJ,IAAhD,EAAuDC,QAAvD,CAFJ;AANyD,CAA3D;AAUAR,IAAKY,CAAAA,QAAL,CACIZ,IAAKI,CAAAA,WAAYC,CAAAA,cADrB,EACqCL,IAAKI,CAAAA,WAAYS,CAAAA,gBADtD,CAAA;AAgBAb,IAAKI,CAAAA,WAAYC,CAAAA,cAAeS,CAAAA,SAAUC,CAAAA,UAA1C,GAAuDC,QAAQ,CAC3DC,cAD2D,EAC3CC,oBAD2C,EACrBC,UADqB,EACTC,iBADS,CACU;AAEvEpB,MAAKqB,CAAAA,OAAQC,CAAAA,MAAb,CAAoBL,cAApB,CAAA;AAGA,MAAIM,iBAAiBvB,IAAKwB,CAAAA,KAAMC,CAAAA,qBAAX,CACjBzB,IAAK0B,CAAAA,GAAIC,CAAAA,gBAAT,CAA0BV,cAA1B,CADiB,CAArB;AAEA,MAAIW,IAAI,IAAKnB,CAAAA,UAAWmB,CAAAA,CAApBA,GAAwBL,cAAeK,CAAAA,CAA3C;AACA,MAAIC,IAAI,IAAKpB,CAAAA,UAAWoB,CAAAA,CAApBA,GAAwBN,cAAeM,CAAAA,CAA3C;AAGA,MAAIC,uBACA9B,IAAKI,CAAAA,WAAY2B,CAAAA,yBAAjB,CAA2Cd,cAA3C,CADJ;AAEAW,GAAA,IAAKE,oBAAqBF,CAAAA,CAA1B;AACAC,GAAA,IAAKC,oBAAqBD,CAAAA,CAA1B;AAEA7B,MAAKI,CAAAA,WAAY4B,CAAAA,oBAAjB,CACI,IAAIhC,IAAKU,CAAAA,IAAKC,CAAAA,UAAd,CAAyBiB,CAAzB,EAA4BC,CAA5B,CADJ,EACoCZ,cADpC,EACoDC,oBADpD,EAEIC,UAFJ,EAEgB,IAFhB,EAEsB,IAFtB,EAE4BC,iBAF5B,CAAA;AAhBuE,CADzE;;",
"sources":["goog/positioning/clientposition.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Client positioning class.\n */\n\ngoog.provide('goog.positioning.ClientPosition');\n\ngoog.require('goog.asserts');\ngoog.require('goog.dom');\ngoog.require('goog.math.Coordinate');\ngoog.require('goog.positioning');\ngoog.require('goog.positioning.AbstractPosition');\ngoog.require('goog.style');\ngoog.requireType('goog.math.Box');\ngoog.requireType('goog.math.Size');\n\n\n\n/**\n * Encapsulates a popup position where the popup is positioned relative to the\n * window (client) coordinates. This calculates the correct position to\n * use even if the element is relatively positioned to some other element. This\n * is for trying to position an element at the spot of the mouse cursor in\n * a MOUSEMOVE event. Just use the event.clientX and event.clientY as the\n * parameters.\n *\n * @param {number|goog.math.Coordinate} arg1 Left position or coordinate.\n * @param {number=} opt_arg2 Top position.\n * @constructor\n * @extends {goog.positioning.AbstractPosition}\n */\ngoog.positioning.ClientPosition = function(arg1, opt_arg2) {\n  'use strict';\n  /**\n   * Coordinate to position popup at.\n   * @type {!goog.math.Coordinate}\n   */\n  this.coordinate = arg1 instanceof goog.math.Coordinate ?\n      arg1 :\n      new goog.math.Coordinate(/** @type {number} */ (arg1), opt_arg2);\n};\ngoog.inherits(\n    goog.positioning.ClientPosition, goog.positioning.AbstractPosition);\n\n\n/**\n * Repositions the popup according to the current state\n *\n * @param {Element} movableElement The DOM element of the popup.\n * @param {goog.positioning.Corner} movableElementCorner The corner of\n *     the popup element that that should be positioned adjacent to\n *     the anchorElement.  One of the goog.positioning.Corner\n *     constants.\n * @param {goog.math.Box=} opt_margin A margin specified in pixels.\n * @param {goog.math.Size=} opt_preferredSize Preferred size of the element.\n * @override\n */\ngoog.positioning.ClientPosition.prototype.reposition = function(\n    movableElement, movableElementCorner, opt_margin, opt_preferredSize) {\n  'use strict';\n  goog.asserts.assert(movableElement);\n\n  // Translates the coordinate to be relative to the page.\n  var viewportOffset = goog.style.getViewportPageOffset(\n      goog.dom.getOwnerDocument(movableElement));\n  var x = this.coordinate.x + viewportOffset.x;\n  var y = this.coordinate.y + viewportOffset.y;\n\n  // Translates the coordinate to be relative to the offset parent.\n  var movableParentTopLeft =\n      goog.positioning.getOffsetParentPageOffset(movableElement);\n  x -= movableParentTopLeft.x;\n  y -= movableParentTopLeft.y;\n\n  goog.positioning.positionAtCoordinate(\n      new goog.math.Coordinate(x, y), movableElement, movableElementCorner,\n      opt_margin, null, null, opt_preferredSize);\n};\n"],
"names":["goog","provide","require","requireType","positioning","ClientPosition","goog.positioning.ClientPosition","arg1","opt_arg2","coordinate","math","Coordinate","inherits","AbstractPosition","prototype","reposition","goog.positioning.ClientPosition.prototype.reposition","movableElement","movableElementCorner","opt_margin","opt_preferredSize","asserts","assert","viewportOffset","style","getViewportPageOffset","dom","getOwnerDocument","x","y","movableParentTopLeft","getOffsetParentPageOffset","positionAtCoordinate"]
}
