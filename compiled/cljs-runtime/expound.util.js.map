{"version":3,"sources":["expound/util.cljc"],"mappings":";AAGA,8BAAA,9BAAKA;AAEL,0BAAA,1BAAMC,4DAAMC;AAAZ,AAEW,IAAAC,oBAAK,OAASD;AAAd,AAAA,GAAAC;AAAiB,OAACC,MAASF;;AAA3BC;;;AAEX;;;2BAAA,3BAAOE,8DAEJC;AAFH,AAGE,IAAAC,qBAAa,iBAAAE,WAAQH;AAAR,AAAA,GAAA,CAAAG,YAAA;AAAA;;AAAA,gCAAAA,zBAAUC;;;AAAvB,AAAA,oBAAAH;AAAA,AAAA,QAAAA,JAAWC;AAAX,AACE,IAAAG,mBAAI,uCAAA,EAAA,vCAAM,AAACC,iCAAiBJ,IAAGA;AAA/B,AAAA,oBAAAG;AAAAA;;AACI,OAACE,qBAAOL;;;AAFd;;;AAIF;;;yBAAA,zBAAMM,0DAEFC;AAFJ,2HAGQA,3CACA,AAACC,kBAAQX,lGACT,OAACY,mDAAWC","names":["expound.util/assert-message","expound.util/nan?","x","and__5041__auto__","js/isNaN","expound.util/parent-spec","k","temp__5804__auto__","p","G__14720","cljs.spec.alpha/get-spec","or__5043__auto__","cljs.core/qualified-ident?","cljs.spec.alpha/form","expound.util/spec-vals","spec-ident","cljs.core/iterate","cljs.core.take_while","cljs.core/some?"],"sourcesContent":["(ns ^:no-doc expound.util\n  (:require [clojure.spec.alpha :as s]))\n\n(def assert-message \"Internal Expound assertion failed. Please report this bug at https://github.com/bhb/expound/issues\")\n\n(defn nan? [x]\n  #?(:clj (and (number? x) (Double/isNaN x))\n     :cljs (and (number? x) (js/isNaN x))))\n\n(defn- parent-spec\n  \"Look up for the parent spec using the spec hierarchy.\"\n  [k]\n  (when-let [p (some-> k s/get-spec)]\n    (or (when (qualified-ident? p) p)\n        (s/form p))))\n\n(defn spec-vals\n  \"Returns all spec keys or pred \"\n  ([spec-ident]\n   (->> spec-ident\n        (iterate parent-spec)\n        (take-while some?))))\n"]}