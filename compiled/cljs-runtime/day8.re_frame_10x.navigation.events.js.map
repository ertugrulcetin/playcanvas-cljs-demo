{"version":3,"sources":["day8/re_frame_10x/navigation/events.cljs"],"mappings":";AAQA,wGAAA,+IAAA,vPAACA,0UAEEC,4EACD,WAAAC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAaK;IAAbF,aAAAJ;cAAA,AAAAK,4CAAAD,WAAA,IAAA,rEAAmBG;AAAnB,AAAA,kDAAA,kDAAA,mFAAA,mFAAA,yIAES,oZAAA,2CAAA,2DAAA,WAAAC,iBAAAC,thBAACC,uGAAM,kDAAA,mFAAA,6DAAA,lMAACC,+CAAOL;AAAf,AACqB,sFAAAE,iBAAAC,sCAAAD,iBAAAC,tJAACF,wCAAAA,2EAAAA;GADtB,iEAAA,mFAAA,yKAAA,gEAAA,mFAAA;;AAKX,wGAAA,iKAAA,zQAACV,4VAEE,6EAAA,qEAAA,mFAAA,6DAAA,lSAACe,sYACF,WAAAC,SAAkBE;AAAlB,AAAA,IAAAD,aAAAD;IAAAC,iBAAA,AAAAZ,4BAAAY;SAAA,AAAAX,4CAAAW,eAAA,hEAAaR;AAAb,AAAA,kDAAA,qjBAAA,kDAAA,mFAAA,mFAAA,wEAAA,2CAAA,kDAAA,MAAA,6DAAA,mFAAA,kJAAA,hnCACWA,nBACA,sBAAA,mFAAA,6DAAA,sFAAA,5PAACU,vCACD,ySAAA,mFAAA,yDAAA,rbAACC;;AAGd,wGAAA,xGAACpB,wQAEC,WAAAqB,SAAkBH;AAAlB,AAAA,IAAAI,aAAAD;IAAAC,iBAAA,AAAAjB,4BAAAiB;SAAA,AAAAhB,4CAAAgB,eAAA,hEAAab;AAAb,AAAA,kDAAA,uSAAA,kDAAA,mFAAA,mFAAA,6DAAA,mFAAA,/lBACO,sBAAA,mFAAA,yDAAA,+EAAA,jPAACU,mBAASV;;AAGnB,wGAAA,gJAAA,xPAACT,2UAEE,yJAAA,mFAAA,6DAAA,zSAACuB,qYAAuC,sEAAA,tEAACR,kGAC1C,WAAKG,EAAEA;AAAP,AAAA,kDAAA,gDAAA,MAAA,kDAAA,mFAAA,mFAAA,wEAAA,2CAAA,kDAAA,MAAA,6DAAA,mFAAA,kJAAA;;AAIF,wGAAA,0JAAA,lQAACM,qVAEE,yJAAA,mFAAA,5OAACD,2TACF,WAAKE,OAAOP;AAAZ,AACE,6DAAA,tDAACQ,+CAAOD","names":["day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.core.reg_event_fx","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core/trim-v","p__21102","p__21103","map__21104","cljs.core/--destructure-map","cljs.core.get","vec__21105","cljs.core.nth","db","view-fn","p1__21099#","p2__21100#","cljs.core.merge","cljs.core.get_in","day8.re_frame_10x.fx.local_storage.save","p__21114","map__21116","_","cljs.core/assoc-in","day8.re-frame-10x.tools.coll/dissoc-in","p__21119","map__21120","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.core.path","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.core.reg_event_db","errors","cljs.core.dissoc"],"sourcesContent":["(ns day8.re-frame-10x.navigation.events\n  (:require\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core :as rf]\n    [day8.re-frame-10x.panels.settings.events                     :as settings.events]\n    [day8.re-frame-10x.fx.window                                  :as window]\n    [day8.re-frame-10x.fx.local-storage                           :as local-storage]\n    [day8.re-frame-10x.tools.coll                                 :as tools.coll]))\n\n(rf/reg-event-fx\n  ::launch-external\n  [rf/trim-v]\n  (fn [{:keys [db]} [view-fn]]\n    {:fx [[::window/open-debugger-window\n           (merge (get-in db [:settings :external-window-dimensions])\n                  {:on-load    #(view-fn %1 %2)\n                   :on-success [::launch-external-success]\n                   :on-failure [::launch-external-failure]})]]}))\n\n(rf/reg-event-fx\n  ::launch-external-success\n  [(local-storage/save \"external-window?\" [:settings :external-window?])]\n  (fn [{:keys [db]} _]\n    {:db (-> db\n             (assoc-in [:settings :external-window?] true)\n             (tools.coll/dissoc-in [:errors :popup-failed?]))\n     :fx [[:dispatch-later {:ms 200 :dispatch [::settings.events/show-panel? false]}]]}))\n\n(rf/reg-event-fx\n  ::launch-external-failure\n  (fn [{:keys [db]} _]\n    {:db (assoc-in db [:errors :popup-failed?] true)\n     :fx [[:dispatch [::external-closed]]]}))\n\n(rf/reg-event-fx\n  ::external-closed\n  [(rf/path [:settings :external-window?]) (local-storage/save \"external-window?\")]\n  (fn [_ _]\n    {:db false\n     :fx [[:dispatch-later {:ms 400 :dispatch [::settings.events/show-panel? true]}]]}))\n\n(rf/reg-event-db\n  ::dismiss-popup-failed\n  [(rf/path [:errors])]\n  (fn [errors _]\n    (dissoc errors :popup-failed?)))"]}