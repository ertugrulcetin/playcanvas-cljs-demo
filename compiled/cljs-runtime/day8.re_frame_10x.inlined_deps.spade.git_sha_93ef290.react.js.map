{"version":3,"sources":["day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/react.cljs"],"mappings":";;AAOA,GAAA,QAAAA,iCAAAC,8CAAAC,2DAAAC,iEAAAC,iFAAAC,uFAAAC;AAAA;AAAA,AAAA,AAASC,qEAAQ,8CAAA,9CAACC;;AAClB,GAAA,QAAAR,iCAAAC,8CAAAC,2DAAAC,iEAAAC,iFAAAC,uFAAAI;AAAA;AAAA,AAAA,AAASC,sEAAS,AAAYH;;AAE9B,gFAAA,hFAAOI;AAAP,AAGE,IAAAC,mBAAI,AAAkBL;AAAtB,AAAA,oBAAAK;AAAAA;;AACI,OAAiBL;;;AAIvB,CAAMM,2FACA,AAACC,sGACCH,8EACAE;AAER,AAAA;;;;;;;;;;;;kFAAA,0FAAAE,5KAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,qHAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,CAAA,uHAAA,vHAAME,kIAWcM,UAAYC;AAXhC,AAYE,oDAAA,mFAAA,mHAAA,2CAAA,9RAACC,+KAASnB,qKAAiBiB,0BACrBC;;;AAbR,CAAA,0GAAA,1GAAMP;;AAAN;AAAA,CAAA,oGAAA,WAAAC,/GAAMD;AAAN,AAAA,IAAAE,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAI,qBAAA;AAAA,AAAA,OAAAA,wDAAAH,SAAAD;;;AAAA,AAeA,AAAA;;;;;;;sEAAA,8EAAAP,pJAAMe;AAAN,AAAA,IAAAd,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAc,yGAAA,CAAA,UAAA,MAAAX;;;AAAA,AAAA,CAAA,2GAAA,3GAAMW,sHAMHG,eAAiBC;AANpB,AAOE,IAAMP,YAAU,AAACQ,kHAAqBF;AAAtC,AACE;qGAAqBG,EAAIR;AAAzB,AACE,oDAAA,7CAACC,gIAAMR,gFAAqBM,kBACtBC;;2FAFaQ;IAAIR;;;;EAAAA;;sGAAJQ,EAAIR;;;IAAJQ;IAAIR;4FAAJQ,EAAIR;;;;;;;;AAR7B,CAAA,8FAAA,9FAAME;;AAAN;AAAA,CAAA,wFAAA,WAAAC,nGAAMD;AAAN,AAAA,IAAAE,WAAA,AAAAR,gBAAAO;IAAAA,eAAA,AAAAN,eAAAM;AAAA,AAAA,IAAAL,qBAAA;AAAA,AAAA,OAAAA,wDAAAM,SAAAD;;;AAAA","names":["js/day8","js/day8.re-frame-10x","js/day8.re-frame-10x.inlined-deps","js/day8.re-frame-10x.inlined-deps.spade","js/day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290","js/day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.react","js/day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.react.context","day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.react/context","js/module$node_modules$react$index.createContext","js/day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.react.Provider","day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.react/Provider","day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.react/provided-container","or__5043__auto__","day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.runtime/*style-container*","day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.container.alternate/->AlternateStyleContainer","var_args","args__5772__auto__","len__5766__auto__","i__5767__auto__","argseq__5773__auto__","cljs.core/IndexedSeq","day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.react/with-style-container","seq19411","G__19412","cljs.core/first","cljs.core/next","self__5751__auto__","container","children","cljs.core.into","day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.react/with-dom","seq19419","G__19420","get-dom-target","_children","day8.re_frame_10x.inlined_deps.spade.git_sha_93ef290.container.dom.create_container","_"],"sourcesContent":["(ns day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.react\n  (:require [react :as react]\n            [day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.container :refer [IStyleContainer]]\n            [day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.container.alternate :refer [->AlternateStyleContainer]]\n            [day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.container.dom :as dom]\n            [day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.runtime :refer [*style-container*]]))\n\n(defonce context (react/createContext nil))\n(defonce Provider (.-Provider context))\n\n(defn- provided-container []\n  ;; NOTE: This hack is inspired by ReactN:\n  ;; https://charles-stover.medium.com/how-reactn-hacks-react-context-9d112397f003\n  (or (.-_currentValue2 context)\n      (.-_currentValue context)))\n\n;; NOTE: As soon as this namespace is used, we \"upgrade\" the global style-container\n;; to also check the react context\n(set! *style-container*\n      (->AlternateStyleContainer\n        provided-container\n        *style-container*))\n\n(defn with-style-container\n  \"Uses the provided IStyleContainer to render the styles of the children\n   elements. This is a reagent-style React component, meant to wrap whatever\n   part of your app needs to have its styled rendered elsewhere (often the\n   root of the app), eg:\n\n     [with-style-container container\n      [your-view]]\n\n   Note that behavior in the presence of a reactively changing `container` is\n   undefined. You should expect to declare one container per render.\"\n  [^IStyleContainer container & children]\n  (into [:> Provider {:value container}]\n        children))\n\n(defn with-dom\n  \"A convenience for rendering Spade styles into an alternate dom target.\n   The first argument may either be an actual DOM element, or a function which\n   returns one.\n\n   See `with-style-container`, which this uses under the hood.\"\n  [get-dom-target & _children]\n  (let [container (dom/create-container get-dom-target)]\n    (fn with-dom-render [_ & children]\n      (into [with-style-container container]\n            children))))\n"]}