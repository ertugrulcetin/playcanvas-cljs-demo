{
"version":3,
"file":"goog.ui.registry.js",
"lineCount":62,
"mappings":"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",
"sources":["goog/ui/registry.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Global renderer and decorator registry.\n */\n\ngoog.provide('goog.ui.registry');\n\ngoog.require('goog.asserts');\ngoog.require('goog.dom.classlist');\ngoog.require('goog.object');\ngoog.requireType('goog.ui.Component');\ngoog.requireType('goog.ui.ControlRenderer');\n\n\n/**\n * Given a {@link goog.ui.Component} constructor, returns an instance of its\n * default renderer.  If the default renderer is a singleton, returns the\n * singleton instance; otherwise returns a new instance of the renderer class.\n * @param {!Function} componentCtor Component constructor function (for example\n *     `goog.ui.Button`).\n * @return {?goog.ui.ControlRenderer} Renderer instance (for example the\n *     singleton instance of `goog.ui.ButtonRenderer`), or null if\n *     no default renderer was found.\n */\ngoog.ui.registry.getDefaultRenderer = function(componentCtor) {\n  'use strict';\n  // TODO(user): This should probably be implemented with a `WeakMap`.\n  // Locate the default renderer based on the constructor's unique ID.  If no\n  // renderer is registered for this class, walk up the superClass_ chain.\n  var key;\n  var /** ?Function|undefined */ ctor = componentCtor;\n  var /** ?Function|undefined */ rendererCtor;\n  while (ctor) {\n    key = goog.getUid(ctor);\n    if ((rendererCtor = goog.ui.registry.defaultRenderers_[key])) break;\n    ctor = /** @type {?Function|undefined} */ (goog.object.getSuperClass(ctor));\n  }\n\n  // If the renderer has a static getInstance method, return the singleton\n  // instance; otherwise create and return a new instance.\n  if (rendererCtor) {\n    return typeof rendererCtor.getInstance === 'function' ?\n        rendererCtor.getInstance() :\n        new rendererCtor();\n  }\n\n  return null;\n};\n\n\n/**\n * Sets the default renderer for the given {@link goog.ui.Component}\n * constructor.\n * @param {Function} componentCtor Component constructor function (for example\n *     `goog.ui.Button`).\n * @param {Function} rendererCtor Renderer constructor function (for example\n *     `goog.ui.ButtonRenderer`).\n * @throws {Error} If the arguments aren't functions.\n */\ngoog.ui.registry.setDefaultRenderer = function(componentCtor, rendererCtor) {\n  'use strict';\n  // In this case, explicit validation has negligible overhead (since each\n  // renderer is only registered once), and helps catch subtle bugs.\n  if (typeof componentCtor !== 'function') {\n    throw new Error('Invalid component class ' + componentCtor);\n  }\n  if (typeof rendererCtor !== 'function') {\n    throw new Error('Invalid renderer class ' + rendererCtor);\n  }\n\n  // Map the component constructor's unique ID to the renderer constructor.\n  var key = goog.getUid(componentCtor);\n  goog.ui.registry.defaultRenderers_[key] = rendererCtor;\n};\n\n\n/**\n * Returns the {@link goog.ui.Component} instance created by the decorator\n * factory function registered for the given CSS class name, or null if no\n * decorator factory function was found.\n * @param {string} className CSS class name.\n * @return {goog.ui.Component?} Component instance.\n */\ngoog.ui.registry.getDecoratorByClassName = function(className) {\n  'use strict';\n  return className in goog.ui.registry.decoratorFunctions_ ?\n      goog.ui.registry.decoratorFunctions_[className]() :\n      null;\n};\n\n\n/**\n * Maps a CSS class name to a function that returns a new instance of\n * {@link goog.ui.Component} or a subclass, suitable to decorate an element\n * that has the specified CSS class.\n * @param {string} className CSS class name.\n * @param {Function} decoratorFn No-argument function that returns a new\n *     instance of a {@link goog.ui.Component} to decorate an element.\n * @throws {Error} If the class name or the decorator function is invalid.\n */\ngoog.ui.registry.setDecoratorByClassName = function(className, decoratorFn) {\n  'use strict';\n  // In this case, explicit validation has negligible overhead (since each\n  // decorator  is only registered once), and helps catch subtle bugs.\n  if (!className) {\n    throw new Error('Invalid class name ' + className);\n  }\n  if (typeof decoratorFn !== 'function') {\n    throw new Error('Invalid decorator function ' + decoratorFn);\n  }\n\n  goog.ui.registry.decoratorFunctions_[className] = decoratorFn;\n};\n\n\n/**\n * Returns an instance of {@link goog.ui.Component} or a subclass suitable to\n * decorate the given element, based on its CSS class.\n *\n * TODO(nnaze): Type of element should be {!Element}.\n *\n * @param {Element} element Element to decorate.\n * @return {goog.ui.Component?} Component to decorate the element (null if\n *     none).\n */\ngoog.ui.registry.getDecorator = function(element) {\n  'use strict';\n  var decorator;\n  goog.asserts.assert(element);\n  var classNames = goog.dom.classlist.get(element);\n  for (var i = 0, len = classNames.length; i < len; i++) {\n    if ((decorator = goog.ui.registry.getDecoratorByClassName(classNames[i]))) {\n      return decorator;\n    }\n  }\n  return null;\n};\n\n\n/**\n * Resets the global renderer and decorator registry.\n */\ngoog.ui.registry.reset = function() {\n  'use strict';\n  goog.ui.registry.defaultRenderers_ = {};\n  goog.ui.registry.decoratorFunctions_ = {};\n};\n\n\n/**\n * Map of {@link goog.ui.Component} constructor unique IDs to the constructors\n * of their default {@link goog.ui.Renderer}s.\n * @type {Object}\n * @private\n */\ngoog.ui.registry.defaultRenderers_ = {};\n\n\n/**\n * Map of CSS class names to registry factory functions.  The keys are\n * class names.  The values are function objects that return new instances\n * of {@link goog.ui.registry} or one of its subclasses, suitable to\n * decorate elements marked with the corresponding CSS class.  Used by\n * containers while decorating their children.\n * @type {Object}\n * @private\n */\ngoog.ui.registry.decoratorFunctions_ = {};\n"],
"names":["goog","provide","require","requireType","ui","registry","getDefaultRenderer","goog.ui.registry.getDefaultRenderer","componentCtor","key","ctor","rendererCtor","getUid","defaultRenderers_","object","getSuperClass","getInstance","setDefaultRenderer","goog.ui.registry.setDefaultRenderer","Error","getDecoratorByClassName","goog.ui.registry.getDecoratorByClassName","className","decoratorFunctions_","setDecoratorByClassName","goog.ui.registry.setDecoratorByClassName","decoratorFn","getDecorator","goog.ui.registry.getDecorator","element","decorator","asserts","assert","classNames","dom","classlist","get","i","len","length","reset","goog.ui.registry.reset"]
}
